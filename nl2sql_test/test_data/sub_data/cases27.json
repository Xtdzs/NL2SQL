[
    {
        "level": 1,
        "tasks": [
            "select"
        ],
        "tables": [
            "Customers"
        ],
        "nl": "查询所有客户的姓名和联系电话",
        "sql": "SELECT customer_full_name, customer_contact_number FROM Customers"
    },
    {
        "level": 2,
        "tasks": [
            "select",
            "join"
        ],
        "tables": [
            "Products",
            "Suppliers"
        ],
        "nl": "查询所有产品及其对应的供应商名称和联系电话",
        "sql": "SELECT Products.product_name, Suppliers.supplier_name, Suppliers.supplier_contact_email FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id"
    },
    {
        "level": 2,
        "tasks": [
            "select",
            "join"
        ],
        "tables": [
            "Orders",
            "Customers"
        ],
        "nl": "查询所有订单及其对应的客户姓名和下单日期",
        "sql": "SELECT Orders.order_id, Customers.customer_full_name, Orders.order_date FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"
    },
    {
        "level": 3,
        "tasks": [
            "select",
            "join",
            "aggregate"
        ],
        "tables": [
            "Products",
            "OrderItems"
        ],
        "nl": "查询每个产品的销售数量和总销售额",
        "sql": "SELECT Products.product_name, COUNT(OrderItems.order_item_id) AS sales_count, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Products.product_name"
    },
    {
        "level": 3,
        "tasks": [
            "select",
            "join",
            "aggregate",
            "having"
        ],
        "tables": [
            "Orders",
            "Customers",
            "ProductSupplierMapping"
        ],
        "nl": "查询所有在2023年下单的客户，并按供应商订单总金额降序排序",
        "sql": "SELECT Customers.customer_full_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id WHERE Orders.order_date BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY Customers.customer_full_name HAVING SUM(OrderItems.unit_price * OrderItems.quantity) > 1000 ORDER BY total_sales DESC"
    }
]