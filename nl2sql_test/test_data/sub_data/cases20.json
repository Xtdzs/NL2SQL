[
    {
        "level": 1,
        "tasks": [
            "select"
        ],
        "tables": [
            "Customers"
        ],
        "nl": "查询所有客户的姓名",
        "sql": "SELECT customer_full_name FROM Customers"
    },
    {
        "level": 2,
        "tasks": [
            "select",
            "join"
        ],
        "tables": [
            "Products",
            "Suppliers"
        ],
        "nl": "查询产品名称和对应的供应商的国家",
        "sql": "SELECT Products.product_name, Suppliers.supplier_country FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id"
    },
    {
        "level": 2,
        "tasks": [
            "select",
            "join",
            "filter"
        ],
        "tables": [
            "Orders",
            "Customers"
        ],
        "nl": "查询所有订单，订单日期大于2023-08-01，并显示客户姓名和订单总金额",
        "sql": "SELECT Customers.customer_full_name, Orders.order_total_amount FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Orders.order_date > '2023-08-01'"
    },
    {
        "level": 3,
        "tasks": [
            "select",
            "join",
            "aggregate",
            "group by"
        ],
        "tables": [
            "Products",
            "Orders",
            "OrderItems"
        ],
        "nl": "查询每个产品在所有订单中的总销售额",
        "sql": "SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name"
    },
    {
        "level": 3,
        "tasks": [
            "select",
            "join",
            "window function"
        ],
        "tables": [
            "Orders",
            "OrderItems"
        ],
        "nl": "查询每个订单中，每个产品的销售额排名和总销售额前三名产品的信息",
        "sql": "SELECT o.order_id, oi.product_id, oi.unit_price * oi.quantity AS sales, RANK() OVER (PARTITION BY o.order_id ORDER BY oi.unit_price * oi.quantity DESC) as product_rank FROM Orders o JOIN OrderItems oi ON o.order_id = oi.order_id ORDER BY o.order_id, product_rank ASC LIMIT 3"
    }
]