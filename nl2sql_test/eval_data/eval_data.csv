"nl","level","tasks","tables","ground_truth","test_result"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询所有产品的名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户订单的总数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY Customers.customer_full_name"," SELECT o.customer_id, COUNT(o.order_id) AS total_orders FROM testpzy.Orders o GROUP BY o.customer_id ORDER BY total_orders DESC NULLS LAST;"
"查询每个产品在所有订单中的总销量排名","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.quantity) AS total_sales, RANK() OVER (ORDER BY SUM(OrderItems.quantity) DESC) as sales_rank FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_name"," SELECT oi.product_id, SUM(oi.quantity) AS total_sales FROM testpzy.orderitems oi GROUP BY oi.product_id ORDER BY total_sales DESC;"
"查询产品出现售后问题的次数超过5次的产品及其对应的订单id和售后请求时间","3","['select', 'join', 'subquery']","['AfterSalesServiceRequests', 'Products', 'Orders']","SELECT Products.product_name, Orders.order_id, AfterSalesServiceRequests.request_date FROM Products JOIN AfterSalesServiceRequests ON Products.product_id = AfterSalesServiceRequests.product_id JOIN Orders ON AfterSalesServiceRequests.order_id = Orders.order_id WHERE (SELECT COUNT(*) FROM AfterSalesServiceRequests WHERE product_id = Products.product_id) > 5"," SELECT a.product_id, COUNT(*) AS request_count, o.order_id, row_number() OVER (PARTITION BY a.product_id ORDER BY a.request_date DESC) AS recent_request_rank FROM testpzy.AfterSalesServiceRequests a JOIN testpzy.Orders o ON a.order_id = o.order_id GROUP BY a.product_id, o.order_id HAVING COUNT(*) > 5 ORDER BY recent_request_rank;"
"查询所有客户的姓名和注册日期","1","['select']","['Customers']","SELECT customer_full_name, customer_registered_date FROM Customers"," SELECT c.customer_full_name, c.customer_registered_date FROM testpzy.Customers c;"
"查询所有产品名称和其CPU型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单总数","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS total_orders FROM hive.testpzy.customers c JOIN hive.testpzy.orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY total_orders DESC NULLS LAST;"
"查询每个产品在过去一个月销售的平均数量","3","['select', 'join', 'aggregate', 'window']","['Products', 'ProductSpecifications', 'Orders', 'OrderItems']","SELECT Products.product_name, AVG(OrderItems.quantity) OVER (PARTITION BY Products.product_id ORDER BY OrderItems.order_id ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS average_sales_last_month FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id JOIN Orders ON Products.product_id = OrderItems.product_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id WHERE OrderItems.order_date >= DATE('now', '-1 month')"," SELECT p.product_id, AVG(oi.quantity) AS average_quantity FROM testpzy.Products p JOIN testpzy.OrderItems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) JOIN testpzy.Orders o ON oi.order_id = o.order_id WHERE o.order_date >= (CURRENT_DATE - interval '1 month') GROUP BY p.product_id;"
"查询所有售后服务请求记录的客户姓名，以及该客户最近一次购买的产品名称和售后原因描述，其中产品由供应商A供应","3","['select', 'join', 'subquery']","['Products', 'Suppliers', 'AfterSalesServiceRequests']","SELECT Customers.customer_full_name, Products.product_name, AfterSalesServiceRequests.issue_description FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id WHERE Suppliers.supplier_name = '供应商A' AND AfterSalesServiceRequests.order_id IN (SELECT MAX(OrderItems.order_id) FROM OrderItems GROUP BY Customers.customer_id)"," SELECT s.supplier_name, p.product_name, a.issue_description FROM hive.testpzy.aftersalesservicerequests AS a JOIN hive.testpzy.products AS p ON a.product_id = p.product_id JOIN hive.testpzy.suppliers AS s ON p.supplier_id = s.supplier_id WHERE s.supplier_name = 'SupplierA' ORDER BY a.request_date DESC LIMIT 1;"
"查询所有客户的姓名","1","['select']","['Customers']","SELECT customer_full_name FROM Customers"," SELECT DISTINCT c.customer_full_name FROM hive.testpzy.customers c;"
"查询产品名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询所有在2023年1月1日之后下单的客户的信息","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT Customers.customer_full_name, Orders.order_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.order_date >= '2023-01-01'"," SELECT c.customer_full_name, c.customer_email_address, c.customer_contact_number, c.customer_shipping_address, c.customer_registered_date FROM hive.testpzy.customers c JOIN hive.testpzy.orders o ON c.customer_id = o.customer_id WHERE o.order_date > '2023-01-01' ORDER BY c.customer_full_name NULLS LAST;"
"查询每个产品的销售总量和平均销售价格","3","['select', 'join', 'aggregate', 'group by']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.quantity) AS total_sales_quantity, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_sale_price FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name"," SELECT oi.product_id, SUM(oi.quantity) AS total_quantity_sold, AVG(oi.unit_price) AS average_unit_price FROM testpzy.orderitems oi GROUP BY oi.product_id ORDER BY total_quantity_sold DESC NULLS LAST;"
"查询供应商的产品数量大于5的供应商名称","3","['select', 'join', 'aggregate', 'having']","['Products', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id GROUP BY Suppliers.supplier_name HAVING COUNT(DISTINCT Products.product_id) > 5"," SELECT s.supplier_name, COUNT(p.product_id) AS num_products FROM testpzy.Suppliers s JOIN testpzy.ProductSupplierMapping psm ON s.supplier_id = psm.supplier_id JOIN testpzy.Products p ON psm.product_id = p.product_id GROUP BY s.supplier_name HAVING COUNT(p.product_id) > 5;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询所有产品的名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单总数","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS total_orders FROM hive.testpzy.customers c JOIN hive.testpzy.orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY total_orders DESC NULLS LAST;"
"查询销售额最高的10个产品的名称和总销售额，排序按照总销售额降序","3","['select', 'join', 'aggregate', 'subquery']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name ORDER BY total_sales DESC LIMIT 10"," SELECT p.product_name, SUM(oi.order_total_amount) AS total_sales FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON CAST(p.product_id AS varchar) = oi.product_id GROUP BY p.product_name ORDER BY total_sales DESC LIMIT 10;"
"查询每个订单的平均商品价格，并按订单总价排序","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems']","SELECT OrderItems.order_id, AVG(OrderItems.unit_price) AS average_item_price, SUM(OrderItems.unit_price * OrderItems.quantity) AS order_total FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY OrderItems.order_id ORDER BY order_total DESC"," SELECT AVG(o.order_total_amount) AS average_order_total_amount, oi.unit_price FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id GROUP BY oi.unit_price ORDER BY oi.unit_price NULLS LAST;"
"查询所有客户的姓名和注册日期","1","['select']","['Customers']","SELECT customer_full_name, customer_registered_date FROM Customers"," SELECT c.customer_full_name, c.customer_registered_date FROM hive.testpzy.customers c ORDER BY c.customer_registered_date NULLS LAST;"
"查询所有产品的名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询所有订单，但只显示那些由John Doe创建的订单","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT Orders.*, Customers.customer_full_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Customers.customer_full_name = 'John Doe'"," SELECT o.order_id, c.customer_full_name FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id WHERE c.customer_full_name ilike '%John%Doe%' ORDER BY o.order_id NULLS LAST;"
"查询每个客户的平均订单金额和他们购买的产品数量","3","['select', 'join', 'aggregate', 'group by']","['Orders', 'Products', 'Customers']","SELECT Customers.customer_full_name, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_order_amount, COUNT(DISTINCT Products.product_id) AS product_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Customers.customer_full_name"," SELECT c.customer_full_name, AVG(o.order_total_amount) AS average_order_total_amount, COUNT(DISTINCT p.product_id) AS total_products FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id LEFT JOIN hive.testpzy.products p ON p.product_sku_code = 'ABC' GROUP BY c.customer_full_name;"
"查询每个订单的平均商品价格，并按订单金额降序排列","3","['select', 'join', 'filter', 'window function']","['Orders', 'OrderItems']","SELECT order_id, AVG(unit_price) OVER (PARTITION BY order_id) AS average_item_price FROM OrderItems ORDER BY SUM(unit_price * quantity) DESC"," SELECT AVG(o.order_total_amount) AS average_order_total_amount, oi.unit_price FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id GROUP BY oi.unit_price ORDER BY oi.unit_price DESC;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询产品名称、屏幕尺寸和处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches, ps.processor_model FROM hive.testpzy.products AS p JOIN hive.testpzy.productspecifications AS ps ON p.product_id = ps.product_id;"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT o.customer_id, COUNT(o.order_id) AS order_count FROM testpzy.Orders o GROUP BY o.customer_id ORDER BY order_count DESC NULLS LAST;"
"根据产品分类统计每个订单的总销售额","3","['select', 'join', 'aggregate', 'group by']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_category, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_category"," SELECT p.product_category, SUM(o.order_total_amount) AS total_sales FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id JOIN hive.testpzy.products p ON oi.product_id = p.product_id GROUP BY p.product_category;"
"查询内存大于8GB且产品发布日期在2022年之后的商品信息","3","['select', 'join', 'where', 'having']","['ProductSpecifications', 'Products']","SELECT Products.product_name, ProductSpecifications.ram_capacity_in_gb FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id WHERE ProductSpecifications.ram_capacity_in_gb > 8 AND Products.product_launch_date >= '2022-01-01'"," SELECT p.product_id, p.product_name, p.product_category, p.product_launch_date, p.warranty_period_in_months FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id WHERE ps.ram_capacity_in_gb > 8 AND EXTRACT(YEAR FROM p.product_launch_date) >= 2022 ORDER BY p.product_id NULLS LAST;"
"查询所有客户的姓名","1","['select']","['Customers']","SELECT customer_full_name FROM Customers"," SELECT DISTINCT customer_full_name FROM hive.testpzy.customers;"
"查询产品名称和对应的供应商联系电话","2","['select', 'join']","['Products', 'Suppliers']","SELECT Products.product_name, Suppliers.supplier_contact_number FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id"," SELECT p.product_name, s.supplier_contact_number FROM hive.testpzy.products p JOIN hive.testpzy.suppliers s ON p.product_id = s.supplier_id;"
"查询所有在2023年10月提交的订单及其客户姓名","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT Orders.order_id, Customers.customer_full_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE DATE(Orders.order_date) BETWEEN '2023-10-01' AND '2023-10-31'"," SELECT o.order_id, c.customer_full_name FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id;"
"统计每个产品的销量排名","3","['select', 'join', 'aggregate', 'group']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_name, SUM(OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Products.product_name ORDER BY total_sales DESC"," SELECT p.product_id, p.product_name, SUM(oi.quantity) AS total_quantity FROM testpzy.Products p JOIN testpzy.OrderItems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) GROUP BY p.product_id, p.product_name ORDER BY total_quantity DESC;"
"查询每个客户在过去三个月的订单中，笔记本电脑的平均处理器速度和存储容量","3","['select', 'join', 'filter', 'window']","['Orders', 'Customers', 'ProductSpecifications']","SELECT Customers.customer_full_name, AVG(ProductSpecifications.processor_model) OVER (PARTITION BY Customers.customer_id ORDER BY Orders.order_date ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS avg_processor_speed, AVG(ProductSpecifications.storage_capacity_in_gb) OVER (PARTITION BY Customers.customer_id ORDER BY Orders.order_date ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS avg_storage_capacity FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN ProductSpecifications ON Orders.product_id = ProductSpecifications.product_id WHERE DATE(Orders.order_date) >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)"," SELECT c.customer_full_name, AVG(ps.storage_capacity_in_gb) AS average_storage_capacity, AVG(ps.processor_model) AS average_processor_model FROM hive.testpzy.orders o JOIN testpzy.Customers c ON o.customer_id = c.customer_id JOIN testpzy.ProductSpecifications ps ON o.product_id = ps.product_id WHERE o.order_date > CURRENT_DATE - INTERVAL '3 months' GROUP BY c.customer_full_name;"
"查询所有客户的姓名和邮箱地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询产品名称和对应的屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单总金额","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, SUM(Orders.order_total_amount) AS total_spent FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_full_name, o.order_total_amount, SUM(o.order_total_amount) OVER (PARTITION BY c.customer_id ORDER BY o.order_date ROWS BETWEEN UNBOUNDED preceding AND CURRENT ROW) AS cumulative_sum FROM testpzy.Customers c JOIN testpzy.Orders o ON c.customer_id = o.customer_id;"
"按供应商分组，查询每个供应商的产品数量和总供应价格","3","['select', 'join', 'aggregate', 'group by']","['Products', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name, COUNT(DISTINCT Products.product_id) AS product_count, SUM(ProductSupplierMapping.supply_price) AS total_supply_price FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id GROUP BY Suppliers.supplier_name"," SELECT s.supplier_id, COUNT(p.product_id) AS num_products, SUM(psm.supply_price) AS total_supply_price FROM hive.testpzy.productsuppliermapping psm JOIN hive.testpzy.products p ON psm.product_id = p.product_id JOIN hive.testpzy.suppliers s ON psm.supplier_id = s.supplier_id GROUP BY s.supplier_id ORDER BY num_products DESC NULLS LAST;"
"查询所有订单中的产品，但排除那些产品的屏幕尺寸小于14英寸的产品","3","['select', 'join', 'where', 'subquery']","['Orders', 'OrderItems', 'Products']","SELECT OrderItems.product_id, Products.product_name FROM OrderItems JOIN Products ON OrderItems.product_id = Products.product_id WHERE OrderItems.product_id IN (SELECT product_id FROM ProductSpecifications WHERE screen_size_in_inches >= 14)"," SELECT oi.product_id FROM hive.testpzy.orderitems oi WHERE oi.unit_price > 14;"
"查询所有客户的姓名和邮箱地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询所有产品名称和其对应的处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个订单的总数量和平均单价","2","['select', 'join', 'aggregate']","['Orders', 'OrderItems']","SELECT Orders.order_id, SUM(OrderItems.quantity) AS total_quantity, AVG(OrderItems.unit_price) AS average_price FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Orders.order_id"," SELECT o.order_id, SUM(oi.quantity) AS total_quantity, AVG(oi.unit_price) AS average_unit_price FROM testpzy.Orders o JOIN testpzy.OrderItems oi ON o.order_id = oi.order_id GROUP BY o.order_id;"
"查询销售额最高的供应商，并列出其产品的名称和总销售额","3","['select', 'join', 'aggregate', 'subquery']","['Products', 'Suppliers', 'Orders']","SELECT Suppliers.supplier_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Suppliers JOIN ProductSupplierMapping ON Suppliers.supplier_id = ProductSupplierMapping.supplier_id JOIN Products ON ProductSupplierMapping.product_id = Products.product_id JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Suppliers.supplier_name HAVING SUM(OrderItems.unit_price * OrderItems.quantity) IN (SELECT MAX(total_sales) FROM (SELECT Suppliers.supplier_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Suppliers JOIN ProductSupplierMapping ON Suppliers.supplier_id = ProductSupplierMapping.supplier_id JOIN Products ON ProductSupplierMapping.product_id = Products.product_id JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Suppliers.supplier_name) AS sales_summary)"," SELECT s.supplier_name, MAX(o.order_total_amount) AS max_order_total_amount FROM testpzy.Suppliers s JOIN testpzy.Orders o ON s.supplier_id = o.customer_id GROUP BY s.supplier_name ORDER BY max_order_total_amount DESC NULLS LAST;"
"查询每个订单的平均单价，并与上一个订单的平均单价进行比较","3","['select', 'join', 'window']","['Orders', 'OrderItems']","SELECT Orders.order_id, AVG(OrderItems.unit_price) AS average_price, LAG(AVG(OrderItems.unit_price)) OVER (ORDER BY Orders.order_date) AS previous_average_price FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Orders.order_id"," SELECT (AVG(o.unit_price) - AVG(oi.unit_price)) AS difference FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.customer_id = 100275 ORDER BY o.order_date DESC LIMIT 2;"
"查询所有客户的姓名和联系电话","1","['select']","['Customers']","SELECT customer_full_name, customer_contact_number FROM Customers"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c;"
"查询所有产品名称以及对应的处理器型号和内存容量","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model, ProductSpecifications.ram_capacity_in_gb FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model, CAST(ps.ram_capacity_in_gb AS varchar) AS ram_capacity_in_gb FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS number_of_orders FROM testpzy.customers c JOIN testpzy.orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY number_of_orders DESC NULLS LAST;"
"查询每个产品在所有订单中的平均销售价格和累计销量排名","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_sale_price, RANK() OVER (ORDER BY SUM(OrderItems.quantity)) AS sales_rank FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_name"," SELECT p.product_id, AVG(oi.unit_price) AS average_unit_price, SUM(oi.quantity) AS total_quantity, RANK() OVER (ORDER BY COUNT(*) DESC) AS rank FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id ORDER BY average_unit_price NULLS LAST, total_quantity NULLS LAST;"
"查询供货价格最高的供应商以及他们供货的产品数量","3","['select', 'join', 'aggregate', 'subquery']","['Products', 'Suppliers', 'ProductSupplierMapping']","SELECT Suppliers.supplier_name, COUNT(ProductSupplierMapping.product_id) AS product_count FROM Suppliers JOIN ProductSupplierMapping ON Suppliers.supplier_id = ProductSupplierMapping.supplier_id WHERE ProductSupplierMapping.supply_price IN (SELECT MAX(supply_price) FROM ProductSupplierMapping GROUP BY supplier_id) GROUP BY Suppliers.supplier_name"," SELECT s.supplier_name, COUNT(*) AS product_count FROM hive.testpzy.productsuppliermapping pm JOIN testpzy.Suppliers s ON pm.supplier_id = s.supplier_id WHERE pm.supply_price = (SELECT MAX(supply_price) FROM hive.testpzy.productsuppliermapping) GROUP BY s.supplier_name ORDER BY product_count DESC LIMIT 1;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询产品名称和它的处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS order_count FROM testpzy.Customers c JOIN testpzy.Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY order_count DESC NULLS LAST;"
"查询销售额最高的三个产品的名称和总销售额，其中销售额大于1000元。","3","['select', 'join', 'aggregate', 'where']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_name HAVING total_sales > 1000 ORDER BY total_sales DESC LIMIT 3"," SELECT p.product_name, SUM(oi.quantity * oi.unit_price) AS total_sales FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_name ORDER BY total_sales DESC NULLS LAST LIMIT 3;"
"查询每个产品类别下，RAM容量最大的产品的名称和RAM容量","3","['select', 'join', 'aggregate', 'window']","['Products', 'ProductSpecifications']","WITH RankedProducts AS (SELECT product_category, product_name, ram_capacity_in_gb, ROW_NUMBER() OVER (PARTITION BY product_category ORDER BY ram_capacity_in_gb DESC) AS rn FROM ProductSpecifications JOIN Products ON ProductSpecifications.product_id = Products.product_id) SELECT product_name, ram_capacity_in_gb FROM RankedProducts WHERE rn = 1"," SELECT p.product_name, ps.ram_capacity_in_gb, rank() OVER (PARTITION BY p.product_category ORDER BY ps.ram_capacity_in_gb DESC) AS rank FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询所有客户的姓名和注册日期","1","['select']","['Customers']","SELECT customer_full_name, customer_registered_date FROM Customers"," SELECT c.customer_full_name, c.customer_registered_date FROM hive.testpzy.customers c;"
"查询所有产品的名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询所有订单，并根据客户姓名筛选订单","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT Orders.*, Customers.customer_full_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Customers.customer_full_name = 'John Doe'"," SELECT o.order_id, c.customer_full_name FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id WHERE c.customer_full_name ILIKE '%John%' ;"
"查询每个客户的平均订单金额和平均购买产品数量","3","['select', 'join', 'aggregate', 'group']","['Orders', 'Products', 'Customers']","SELECT Customers.customer_full_name, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_order_amount, AVG(OrderItems.quantity) AS average_product_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Customers.customer_full_name"," SELECT c.customer_full_name, to_char(AVG(o.order_total_amount), '999D99') AS average_order_total_amount, to_char(AVG(pc.product_id), '999D99') AS average_products_bought FROM hive.testpzy.customers c JOIN hive.testpzy.orders o ON c.customer_id = o.customer_id JOIN hive.testpzy.order_products op ON o.order_id = op.order_id JOIN hive.testpzy.products p ON op.product_id = p.product_id GROUP BY c.customer_full_name;"
"查询所有产品的名称，以及对应供应商的供应价格低于平均供应价格的产品数量","3","['select', 'join', 'aggregate', 'subquery']","['Products', 'Suppliers', 'ProductSupplierMapping']","SELECT Products.product_name, COUNT(*) AS count_of_products FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id WHERE ProductSupplierMapping.supply_price < (SELECT AVG(supply_price) FROM ProductSupplierMapping) GROUP BY Products.product_name"," SELECT COUNT(*) FROM testpzy.products p JOIN testpzy.productsuppliermapping m ON p.product_id = m.product_id WHERE p.product_name ilike '%%%' AND m.supply_price < (SELECT AVG(supply_price) FROM testpzy.productsuppliermapping);"
"查询所有客户的姓名和注册日期","1","['select']","['Customers']","SELECT customer_full_name, customer_registered_date FROM Customers"," SELECT c.customer_full_name, c.customer_registered_date FROM testpzy.Customers c;"
"查询所有产品的名称和存储容量","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.storage_capacity_in_gb FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.storage_capacity_in_gb FROM testpzy.products AS p JOIN testpzy.productspecifications AS ps ON p.product_id = ps.product_id;"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS total_orders FROM testpzy.Customers c JOIN testpzy.Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY total_orders DESC NULLS LAST;"
"查询每个供应商的销售额和产品数量","3","['select', 'join', 'aggregate', 'group by']","['Orders', 'Products', 'Suppliers']","SELECT Suppliers.supplier_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales, COUNT(DISTINCT Products.product_id) AS product_count FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id GROUP BY Suppliers.supplier_name"," SELECT s.supplier_id, SUM(o.order_total_amount) AS total_spent_on_orders, COUNT(oi.product_id) AS total_products FROM hive.testpzy.suppliers s JOIN hive.testpzy.orders o ON s.supplier_id = o.customer_id JOIN hive.testpzy.order_items oi ON o.order_id = oi.order_id GROUP BY s.supplier_id"
"查询库存数量大于10的商品名称，以及该商品在订单中的销售记录","3","['select', 'join', 'subquery']","['Products', 'Inventory', 'Orders']","SELECT Products.product_name FROM Products JOIN Inventory ON Products.product_id = Inventory.product_id WHERE Inventory.quantity_in_stock > 10
UNION ALL SELECT ProductSpecifications.processor_model, OrderItems.order_id FROM Inventory JOIN Products ON Inventory.product_id = Products.product_id JOIN  ProductSpecifications ON Products.product_id = ProductSpecifications.product_id JOIN Orders ON Products.product_id = Orders.product_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id WHERE Inventory.quantity_in_stock > 10"," SELECT p.product_name, o.order_id, o.order_total_amount FROM hive.testpzy.products p JOIN testpzy.inventory i ON CAST(p.product_id AS varchar) = i.product_id JOIN testpzy.orders o ON i.product_id = o.customer_id WHERE p.product_id > 10;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询所有产品名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS total_orders FROM testpzy.Customers c JOIN testpzy.Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY total_orders DESC NULLS LAST;"
"查询在2023年1月订购的笔记本电脑数量，由供应商A供应","3","['select', 'join', 'aggregate', 'where']","['Products', 'Suppliers', 'Orders', 'OrderItems']","SELECT COUNT(DISTINCT OrderItems.product_id) AS notebook_count FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id WHERE Products.product_category = 'Laptop' AND Orders.order_date BETWEEN '2023-01-01' AND '2023-01-31' AND Suppliers.supplier_name = '供应商A'"," SELECT COUNT(*) FROM testpzy.orderitems oi JOIN testpzy.orders o ON oi.order_id = o.order_id JOIN testpzy.products p ON oi.product_id = p.product_id JOIN testpzy.suppliers s ON p.product_category = s.supplier_name WHERE EXTRACT(YEAR FROM o.order_date) = 2023 AND EXTRACT(MONTH FROM o.order_date) = 1 AND p.product_category = '笔记本电脑' AND s.supplier_name = '供应商A';"
"查询销售额超过1000元的商品分类，并统计每个分类的销售额","3","['select', 'join', 'aggregate', 'group by', 'having']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_category, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_category HAVING total_sales > 1000"," SELECT p.product_category, SUM(o.order_total_amount) AS total_sales FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id JOIN hive.testpzy.products p ON oi.product_id = p.product_id WHERE oi.unit_price * oi.quantity > 1000 GROUP BY p.product_category;"
"查询所有客户的姓名和邮箱地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM testpzy.Customers c;"
"查询所有产品型号和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON CAST(p.product_id AS varchar) = CAST(ps.product_id AS varchar);"
"查询所有订单，订单状态为“已发货”并且客户姓名为 '张三'","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT * FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Orders.order_status = '已发货' AND Customers.customer_full_name = '张三'"," SELECT o.order_id, o.customer_id, o.order_date, o.order_total_amount, o.order_status, c.customer_full_name, c.customer_shipping_address FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id WHERE o.order_status = '已发货' AND c.customer_full_name = '张三';"
"查询每个产品的总销售额，销量超过10件的产品显示出来","3","['select', 'join', 'aggregate', 'filter']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_name HAVING SUM(OrderItems.unit_price * OrderItems.quantity) > 10"," SELECT p.product_name, SUM(oi.quantity) AS total_quantity FROM hive.testpzy.orderitems oi JOIN hive.testpzy.products p ON oi.product_id = p.product_id WHERE oi.quantity > 10 GROUP BY p.product_name ORDER BY total_quantity DESC NULLS LAST;"
"查询每个供应商的平均供货价格，并根据平均供货价格降序排列","3","['select', 'join', 'aggregate', 'window']","['Products', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name, AVG(ProductSupplierMapping.supply_price) AS avg_supply_price FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id GROUP BY Suppliers.supplier_name ORDER BY avg_supply_price DESC"," SELECT s.supplier_name, AVG(psm.supply_price) AS average_supply_price FROM hive.testpzy.productsuppliermapping psm JOIN hive.testpzy.suppliers s ON psm.supplier_id = s.supplier_id GROUP BY s.supplier_name ORDER BY average_supply_price DESC;"
"查询所有客户的姓名和联系电话","1","['select']","['Customers']","SELECT customer_full_name, customer_contact_number FROM Customers"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c;"
"查询所有产品的名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM testpzy.products p JOIN testpzy.productspecifications ps ON CAST(p.product_id AS VARCHAR) = ps.product_id;"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS total_orders FROM testpzy.Customers c JOIN testpzy.Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY total_orders DESC NULLS LAST;"
"查询每个产品在过去一年的销售数量，并根据每个产品的总销量进行排名","3","['select', 'join', 'aggregate', 'window']","['Products', 'ProductSpecifications', 'Orders', 'OrderItems']","SELECT Products.product_name, SUM(CASE WHEN OrderItems.order_date >= DATE('now', '-1 year') THEN 1 ELSE 0 END) AS sales_in_last_year, RANK() OVER (ORDER BY SUM(CASE WHEN OrderItems.order_date >= DATE('now', '-1 year') THEN 1 ELSE 0 END) DESC) AS product_rank FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id LEFT JOIN Orders ON Products.product_id = Orders.product_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Products.product_name"," SELECT p.product_id, p.product_name, COUNT(oi.order_item_id) AS total_sales, rank() OVER (ORDER BY COUNT(oi.order_item_id) DESC) AS sales_rank FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON CAST(p.product_id AS varchar) = oi.product_id JOIN hive.testpzy.orders o ON oi.order_id = o.order_id WHERE EXTRACT(YEAR FROM o.order_date) >= EXTRACT(YEAR FROM CURRENT_DATE) - 1 GROUP BY p.product_id, p.product_name ORDER BY total_sales DESC;"
"查询所有客户，以及他们购买产品的供应商名称和总消费金额，其中总消费金额超过平均消费金额的客户","3","['select', 'join', 'aggregate', 'subquery']","['Customers', 'Orders', 'ProductSupplierMapping', 'Products']","SELECT Customers.customer_full_name, Suppliers.supplier_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_spending FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN ProductSupplierMapping ON OrderItems.product_id = ProductSupplierMapping.product_id JOIN Products ON ProductSupplierMapping.product_id = Products.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id WHERE Customers.customer_id IN (SELECT customer_id FROM Customers GROUP BY customer_id HAVING SUM(Orders.order_total_amount) > (SELECT AVG(order_total_amount) FROM Orders)) GROUP BY Customers.customer_full_name, Suppliers.supplier_name"," SELECT c.customer_full_name, o.order_total_amount, SUM(o.order_total_amount) OVER (PARTITION BY c.customer_id) AS total_spent_per_customer, ps.supplier_id FROM testpzy.customers c JOIN testpzy.orders o ON c.customer_id = o.customer_id AND date_trunc('MONTH', o.order_date) <= date_trunc('MONTH', CURRENT_DATE) LEFT
  OUTER JOIN testpzy.productsuppliermapping ps ON TRUE;"
"查询所有客户的姓名","1","['select']","['Customers']","SELECT customer_full_name FROM Customers"," SELECT DISTINCT c.customer_full_name FROM testpzy.customers c;"
"查询所有订单及其对应的产品名称","2","['select', 'join']","['Orders', 'Products']","SELECT Orders.order_id, Products.product_name FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id"," SELECT o.order_id, p.product_name FROM hive.testpzy.orders o JOIN hive.testpzy.products p ON o.customer_id = p.product_id;"
"查询产品名称为‘Laptop A1’的供应商名称","2","['select', 'join', 'filter']","['Products', 'Suppliers']","SELECT Suppliers.supplier_name FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id WHERE Products.product_name = 'Laptop A1'"," SELECT s.supplier_name FROM hive.testpzy.products p JOIN hive.testpzy.suppliers s ON p.product_id = s.supplier_id WHERE p.product_name = 'Laptop A1';"
"查询每个产品销售总额，并按销量降序排序","3","['select', 'join', 'aggregate', 'group by']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name ORDER BY total_sales DESC"," SELECT p.product_id, SUM(oi.order_total_amount) AS total_order_amount FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) JOIN hive.testpzy.orders o ON oi.order_id = o.order_id GROUP BY p.product_id ORDER BY oi.quantity DESC;"
"查询客户姓名，以及该客户所有售后服务的请求日期和描述","3","['select', 'join', 'subquery']","['Customers', 'Orders', 'AfterSalesServiceRequests']","SELECT Customers.customer_full_name, AfterSalesServiceRequests.request_date, AfterSalesServiceRequests.issue_description FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN AfterSalesServiceRequests ON Orders.order_id = AfterSalesServiceRequests.order_id"," SELECT c.customer_full_name, a.request_date, a.issue_description FROM testpzy.customers c JOIN testpzy.orders o ON c.customer_id = o.customer_id JOIN testpzy.aftersalesservicerequests a ON o.order_id = a.order_id;"
"查询所有客户的姓名","1","['select']","['Customers']","SELECT customer_full_name FROM Customers"," SELECT DISTINCT c.customer_full_name FROM hive.testpzy.customers c;"
"查询产品的名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询所有来自美国客户的订单的总金额","2","['select', 'join', 'where']","['Orders', 'Customers']","SELECT SUM(OrderItems.unit_price * OrderItems.quantity) AS total_amount FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id WHERE Customers.customer_country = '美国'"," SELECT SUM(o.order_total_amount) AS total_order_amount FROM testpzy.Orders o JOIN customers c ON o.customer_id = c.customer_id WHERE c.customer_country = 'United States';"
"查询每个供应商的供应产品数量最多的产品类型","3","['select', 'join', 'aggregate', 'group by']","['Products', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name, Products.product_category, COUNT(*) AS product_count FROM Suppliers JOIN ProductSupplierMapping ON Suppliers.supplier_id = ProductSupplierMapping.supplier_id JOIN Products ON ProductSupplierMapping.product_id = Products.product_id GROUP BY Suppliers.supplier_name, Products.product_category ORDER BY product_count DESC LIMIT 1"," SELECT s.supplier_id, p.product_category, COUNT(p.product_id) AS product_count FROM testpzy.Suppliers AS s JOIN testpzy.ProductSupplierMapping AS m ON s.supplier_id = m.supplier_id JOIN testpzy.Products AS p ON m.product_id = p.product_id GROUP BY s.supplier_id, p.product_category ORDER BY product_count DESC;"
"查询所有订单中，产品价格超过平均价格的订单信息","3","['select', 'join', 'subquery']","['Orders', 'OrderItems', 'Products']","SELECT * FROM Orders WHERE order_id IN (SELECT order_id FROM OrderItems GROUP BY order_id HAVING AVG(unit_price) < (SELECT AVG(unit_price) FROM OrderItems))"," SELECT o.order_id, p.product_name, oi.quantity, oi.unit_price, (o.order_total_amount / NULLIF(COUNT(oi.order_item_id), 0)) AS avg_price_per_order FROM testpzy.Orders o JOIN testpzy.OrderItems oi ON o.order_id = oi.order_id JOIN testpzy.Products p ON oi.product_id = p.product_id WHERE oi.unit_price > (SELECT AVG(unit_price) FROM testpzy.OrderItems) GROUP BY o.order_id, p.product_name, oi.quantity, oi.unit_price ORDER BY o.order_id NULLS LAST;"
"查询所有客户的姓名和注册日期","1","['select']","['Customers']","SELECT customer_full_name, customer_registered_date FROM Customers"," SELECT c.customer_full_name, c.customer_registered_date FROM hive.testpzy.customers c;"
"查询所有产品名称和对应的处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询所有订单的ID、客户姓名和订单日期","2","['select', 'join']","['Orders', 'Customers']","SELECT Orders.order_id, Customers.customer_full_name, Orders.order_date FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"," SELECT o.order_id, c.customer_full_name, o.order_date FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id;"
"查询每个产品的销售数量和总销售额","3","['select', 'join', 'aggregate']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_name, COUNT(OrderItems.order_item_id) AS sales_count, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name"," SELECT p.product_id, SUM(oi.quantity) AS total_quantity_sold, SUM(oi.unit_price * oi.quantity) AS total_revenue FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON CAST(p.product_id AS varchar) = oi.product_id GROUP BY p.product_id ORDER BY total_quantity_sold DESC NULLS LAST;"
"查询每个订单的平均商品单价，按照订单日期排序并分组","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems']","SELECT order_date, AVG(unit_price * quantity) AS average_price FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY order_date ORDER BY order_date;"," SELECT o.order_date, AVG(oi.unit_price) AS average_unit_price FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_date ORDER BY o.order_date NULLS LAST;"
"查询所有客户的姓名","1","['select']","['Customers']","SELECT customer_full_name FROM Customers"," SELECT DISTINCT c.customer_full_name FROM hive.testpzy.customers c;"
"查询产品名称和对应的供应商的国家","2","['select', 'join']","['Products', 'Suppliers']","SELECT Products.product_name, Suppliers.supplier_country FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id"," SELECT p.product_name, s.supplier_country FROM hive.testpzy.products p JOIN hive.testpzy.suppliers s ON p.product_sku_code = CAST(s.supplier_id AS varchar)"
"查询所有订单，订单日期大于2023-08-01，并显示客户姓名和订单总金额","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT Customers.customer_full_name, Orders.order_total_amount FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Orders.order_date > '2023-08-01'"," SELECT o.order_total_amount, c.customer_full_name FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id WHERE o.order_date > '2023-08-01';"
"查询每个产品在所有订单中的总销售额","3","['select', 'join', 'aggregate', 'group by']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name"," SELECT p.product_id, SUM(oi.quantity * oi.unit_price) AS total_revenue FROM testpzy.Products p JOIN testpzy.OrderItems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) GROUP BY p.product_id ORDER BY total_revenue DESC NULLS LAST;"
"查询每个订单中，每个产品的销售额排名和总销售额前三名产品的信息","3","['select', 'join', 'window function']","['Orders', 'OrderItems']","SELECT o.order_id, oi.product_id, oi.unit_price * oi.quantity AS sales, RANK() OVER (PARTITION BY o.order_id ORDER BY oi.unit_price * oi.quantity DESC) as product_rank FROM Orders o JOIN OrderItems oi ON o.order_id = oi.order_id ORDER BY o.order_id, product_rank ASC LIMIT 3"," SELECT o.order_id, p.product_name, SUM(oi.unit_price) OVER (PARTITION BY o.order_id ORDER BY oi.order_item_id ROWS BETWEEN UNBOUNDED preceding AND CURRENT ROW) AS cumulative_total FROM testpzy.orders o JOIN testpzy.orderitems oi ON o.order_id = oi.order_id JOIN testpzy.products p ON p.product_id = oi.product_id;"
"查询所有客户的姓名和联系电话","1","['select']","['Customers']","SELECT customer_full_name, customer_contact_number FROM Customers"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c;"
"查询所有产品型号及其对应的屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_id, p.product_sku_code, ps.screen_size_in_inches FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS order_count FROM hive.testpzy.customers c JOIN hive.testpzy.orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY order_count DESC NULLS LAST; SELECT COUNT(DISTINCT o.order_id) AS total_orders FROM hive.testpzy.orders o;"
"查询所有销售额超过1000美元的产品供应商名称和产品数量","3","['select', 'join', 'aggregate', 'where']","['Products', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name, COUNT(Products.product_id) AS product_count FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id WHERE SUM(ProductSupplierMapping.supply_price * 1000) > 1000 GROUP BY Suppliers.supplier_name"," SELECT s.supplier_name, COUNT(p.product_id) AS product_count FROM hive.testpzy.products p JOIN hive.testpzy.productsuppliermapping m ON p.product_id = m.product_id JOIN hive.testpzy.suppliers s ON m.supplier_id = s.supplier_id WHERE m.supply_price > 1000 GROUP BY s.supplier_name ORDER BY product_count DESC NULLS LAST;"
"查询每个订单的平均商品单价和每个订单中最高价格的商品名称","3","['select', 'join', 'aggregate', 'window']","['OrderItems', 'Orders']","SELECT Orders.order_id, AVG(OrderItems.unit_price) AS average_item_price, MAX(CASE WHEN OrderItems.unit_price = (SELECT MAX(OrderItems.unit_price) FROM OrderItems WHERE order_id = Orders.order_id) THEN Products.product_name ELSE NULL END) AS highest_priced_product_name FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Orders.order_id"," SELECT o.order_id, AVG(oi.unit_price) AS average_unit_price, MAX(oi.unit_price) OVER (PARTITION BY o.order_id) AS max_unit_price FROM testpzy.orders o JOIN testpzy.orderitems oi ON o.order_id = oi.order_id;"
"查询所有客户的姓名和联系电话","1","['select']","['Customers']","SELECT customer_full_name, customer_contact_number FROM Customers"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c;"
"查询所有产品名称和对应的处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM testpzy.products p JOIN testpzy.productspecifications ps ON CAST(p.product_id AS varchar) = CAST(ps.product_id AS varchar);"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS order_count FROM hive.testpzy.customers c JOIN hive.testpzy.orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY order_count DESC NULLS LAST;"
"查询每个产品的平均销售价格和过去一周的销售额排名","3","['select', 'join', 'aggregate', 'window']","['Products', 'ProductSpecifications', 'Orders', 'OrderItems']","SELECT Products.product_name, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_sale_price, ROW_NUMBER() OVER (ORDER BY SUM(OrderItems.unit_price * OrderItems.quantity) DESC) AS sales_rank FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id JOIN Orders ON Products.product_id = Orders.product_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id WHERE Orders.order_date >= DATEADD(day, -7, GETDATE()) GROUP BY Products.product_name"," SELECT oi.product_id, AVG(oi.unit_price * oi.quantity) AS average_price, RANK() OVER (ORDER BY SUM(o.order_total_amount) DESC) AS rank FROM testpzy.OrderItems oi JOIN testpzy.Orders o ON oi.order_id = o.order_id WHERE o.order_date >= CURRENT_DATE - INTERVAL '1 week' GROUP BY oi.product_id;"
"查询所有供应商中，供应产品数量超过10个的供应商名称","3","['select', 'join', 'subquery']","['Suppliers', 'ProductSupplierMapping', 'Products']","SELECT Suppliers.supplier_name FROM Suppliers JOIN ProductSupplierMapping ON Suppliers.supplier_id = ProductSupplierMapping.supplier_id JOIN Products ON ProductSupplierMapping.product_id = Products.product_id WHERE Suppliers.supplier_id IN (SELECT supplier_id FROM ProductSupplierMapping GROUP BY supplier_id HAVING COUNT(DISTINCT product_id) > 10)"," SELECT s.supplier_name, COUNT(m.mapping_id) AS num_mappings FROM hive.testpzy.suppliers s JOIN hive.testpzy.productsuppliermapping m ON s.supplier_id = m.supplier_id GROUP BY s.supplier_id, s.supplier_name HAVING COUNT(m.mapping_id) > 10;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询所有产品名称和对应的处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询所有在 2023 年 10 月 1 日之后提交的订单的客户姓名和订单总金额","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT Customers.customer_full_name, Orders.order_total_amount FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Orders.order_date > '2023-10-01'"," SELECT c.customer_full_name, o.order_total_amount FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id WHERE o.order_date > '2023-10-01';"
"查询每个产品的销售数量和总销售额","3","['select', 'join', 'aggregate', 'group by']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, COUNT(OrderItems.order_item_id) AS sale_count, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_name"," SELECT p.product_id, COUNT(oi.order_item_id) AS total_orders, SUM(o.order_total_amount) AS total_revenue FROM hive.testpzy.orderitems oi JOIN hive.testpzy.orders o ON oi.order_id = o.order_id JOIN hive.testpzy.products p ON oi.product_id = p.product_id GROUP BY p.product_id;"
"查询每个供应商的产品销售额排名，按销售额从高到低排序，并显示前5名供应商","3","['select', 'join', 'filter', 'window function']","['Products', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales, RANK() OVER (ORDER BY SUM(OrderItems.unit_price * OrderItems.quantity) DESC) AS sales_rank FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Suppliers.supplier_name ORDER BY sales_rank ASC LIMIT 5"," SELECT s.supplier_name, SUM(p.product_id * psm.supply_price) AS total_sales FROM testpzy.ProductSupplierMapping psm JOIN testpzy.Products p ON psm.product_id = p.product_id JOIN testpzy.Suppliers s ON psm.supplier_id = s.supplier_id GROUP BY s.supplier_name ORDER BY total_sales DESC NULLS LAST LIMIT 5;"
"查询所有客户的姓名和注册日期","1","['select']","['Customers']","SELECT customer_full_name, customer_registered_date FROM Customers"," SELECT c.customer_full_name, c.customer_registered_date FROM hive.testpzy.customers c;"
"查询所有产品的名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单数量","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS total_orders FROM hive.testpzy.customers c JOIN hive.testpzy.orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY total_orders DESC NULLS LAST;"
"查询每种产品的总销售额，按销售额降序排列","3","['select', 'join', 'aggregate', 'subquery']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name ORDER BY total_sales DESC"," SELECT p.product_id, SUM(oi.order_total_amount) AS total_sales FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) GROUP BY p.product_id ORDER BY total_sales DESC;"
"查询每个客户最近一次订单的日期和该订单总金额","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems', 'Customers']","SELECT Customers.customer_full_name, MAX(Orders.order_date) AS last_order_date, SUM(OrderItems.unit_price * OrderItems.quantity) AS order_total FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Customers.customer_full_name ORDER BY last_order_date DESC"," SELECT c.customer_full_name, o.order_date, o.order_total_amount FROM testpzy.Customers c JOIN testpzy.Orders o ON c.customer_id = o.customer_id ORDER BY o.order_date DESC NULLS LAST;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM testpzy.customers c;"
"查询所有产品名称和处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个订单的总金额","2","['select', 'join', 'aggregate']","['Orders', 'OrderItems']","SELECT Orders.order_id, SUM(OrderItems.unit_price * OrderItems.quantity) AS order_total FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Orders.order_id"," SELECT o.order_id, SUM(oi.unit_price * oi.quantity) AS total_product_amount FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_product_amount DESC NULLS LAST;"
"查询每个客户购买的总金额和平均订单价值","3","['select', 'join', 'aggregate', 'group by']","['Orders', 'Customers', 'Products']","SELECT Customers.customer_full_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_spent, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_order_value FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Customers.customer_full_name"," SELECT c.customer_full_name, o.order_total_amount, AVG(o.order_total_amount) OVER (PARTITION BY c.customer_id) AS avg_order_total_amount FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id;"
"查询每个订单的平均购买价格，并按订单日期排序","3","['select', 'join', 'window function']","['Orders', 'OrderItems']","SELECT order_id, AVG(unit_price * quantity) OVER (PARTITION BY order_id ORDER BY request_date) AS average_purchase_price FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id"," SELECT o.order_id, AVG(oi.unit_price) AS average_unit_price, o.order_date FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date NULLS LAST;"
"查询所有客户的姓名和注册日期","1","['select']","['Customers']","SELECT customer_full_name, customer_registered_date FROM Customers"," SELECT c.customer_full_name, c.customer_registered_date FROM testpzy.Customers c ORDER BY c.customer_full_name NULLS LAST;"
"查询产品名称和供应商联系电话","2","['select', 'join']","['Products', 'Suppliers']","SELECT Products.product_name, Suppliers.supplier_contact_email FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id"," SELECT p.product_name, s.supplier_contact_number FROM testpzy.products p JOIN testpzy.suppliers s ON p.product_id = s.supplier_id;"
"查询所有订单，并且客户姓名是John Doe的订单金额","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT OrderItems.unit_price * OrderItems.quantity AS order_amount FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id WHERE Customers.customer_full_name = 'John Doe'"," SELECT SUM(o.order_total_amount) AS total_order_amount FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id WHERE c.customer_full_name ilike '%John%Doe%'"
"查询每个产品型号的平均屏幕尺寸，并且屏幕尺寸大于15英寸的产品","3","['select', 'join', 'aggregate', 'filter']","['Products', 'ProductSpecifications', 'Orders', 'OrderItems']","SELECT Products.product_name, AVG(ProductSpecifications.screen_size_in_inches) AS average_screen_size FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id JOIN Orders ON Products.product_id = Orders.product_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id WHERE ProductSpecifications.screen_size_in_inches > 15 GROUP BY Products.product_name"," SELECT p.product_id, AVG(ps.screen_size_in_inches) AS average_screen_size FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id WHERE ps.screen_size_in_inches > 15 GROUP BY p.product_id ORDER BY average_screen_size DESC NULLS LAST;"
"查询每个客户的订单平均金额和该客户所有订单的总金额排名","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems', 'Customers']","SELECT Customers.customer_full_name, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_order_amount, SUM(OrderItems.unit_price * OrderItems.quantity) OVER (PARTITION BY Customers.customer_id) AS total_order_amount, RANK() OVER (ORDER BY SUM(OrderItems.unit_price * OrderItems.quantity) DESC) AS rank FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id"," SELECT o.customer_id, c.customer_full_name, AVG(o.order_total_amount) AS average_order_total_amount, rank() OVER (PARTITION BY o.customer_id ORDER BY SUM(o.order_total_amount) DESC) AS rank FROM testpzy.Orders o JOIN testpzy.Customers c ON o.customer_id = c.customer_id GROUP BY o.customer_id, c.customer_full_name;"
"查询所有客户的姓名和联系电话","1","['select']","['Customers']","SELECT customer_full_name, customer_contact_number FROM Customers"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c;"
"查询所有产品及其对应的供应商名称和联系电话","2","['select', 'join']","['Products', 'Suppliers']","SELECT Products.product_name, Suppliers.supplier_name, Suppliers.supplier_contact_email FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id"," SELECT p.product_name, s.supplier_name, s.supplier_contact_number FROM hive.testpzy.products AS p JOIN hive.testpzy.suppliers AS s ON p.product_id = s.supplier_id;"
"查询所有订单及其对应的客户姓名和下单日期","2","['select', 'join']","['Orders', 'Customers']","SELECT Orders.order_id, Customers.customer_full_name, Orders.order_date FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"," SELECT o.order_id, c.customer_full_name, o.order_date FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id;"
"查询每个产品的销售数量和总销售额","3","['select', 'join', 'aggregate']","['Products', 'OrderItems']","SELECT Products.product_name, COUNT(OrderItems.order_item_id) AS sales_count, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Products.product_name"," SELECT p.product_id, SUM(oi.quantity) AS total_quantity, SUM(oi.unit_price * oi.quantity) AS total_order_amount FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id;"
"查询所有在2023年下单的客户，并按供应商订单总金额降序排序","3","['select', 'join', 'aggregate', 'having']","['Orders', 'Customers', 'ProductSupplierMapping']","SELECT Customers.customer_full_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id WHERE Orders.order_date BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY Customers.customer_full_name HAVING SUM(OrderItems.unit_price * OrderItems.quantity) > 1000 ORDER BY total_sales DESC"," SELECT c.customer_full_name, o.order_date, o.order_total_amount FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id WHERE EXTRACT(YEAR FROM o.order_date) = 2023 ORDER BY o.order_total_amount DESC;"
"查询所有客户的姓名和联系电话","1","['select']","['Customers']","SELECT customer_full_name, customer_contact_number FROM Customers"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c;"
"查询产品名称和对应的屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户订单的总金额","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_order_amount FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Customers.customer_full_name"," SELECT c.customer_full_name, SUM(o.order_total_amount) AS total_amount_spent FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id GROUP BY c.customer_full_name;"
"查询每个产品的平均供货价格，并按平均供货价格排序","3","['select', 'join', 'aggregate', 'window']","['Orders', 'ProductSupplierMapping', 'Products']","SELECT Products.product_name, AVG(ProductSupplierMapping.supply_price) OVER (PARTITION BY Products.product_id ORDER BY ProductSupplierMapping.supply_price) AS avg_supply_price FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id GROUP BY Products.product_name ORDER BY avg_supply_price DESC"," SELECT p.product_id, s.supply_price FROM testpzy.ProductSupplierMapping p JOIN hive.testpzy.suppliers s ON p.supplier_id = s.supplier_id WHERE p.product_id IN (SELECT product_id FROM testpzy.Products) GROUP BY p.product_id, s.supply_price ORDER BY AVG(s.supply_price) NULLS LAST;"
"查询已购买过产品的客户姓名，并过滤掉没有在过去一个月内进行过购买的客户","3","['select', 'join', 'subquery']","['Customers', 'Orders', 'Products']","SELECT Customers.customer_full_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Products ON Orders.order_id = OrderItems.order_id WHERE Orders.order_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH) GROUP BY Customers.customer_full_name"," SELECT c.customer_full_name FROM hive.testpzy.customers AS c JOIN hive.testpzy.orders AS o ON c.customer_id = o.customer_id WHERE o.order_date >= (CURRENT_DATE - INTERVAL '1 month') ORDER BY c.customer_full_name NULLS LAST;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询所有产品的名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单总数","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS order_count FROM testpzy.customers c JOIN testpzy.orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY order_count DESC NULLS LAST;"
"查询每个供应商的产品销售总额，按总销售额降序排列","3","['select', 'join', 'aggregate', 'group_by']","['Products', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Suppliers.supplier_name ORDER BY total_sales DESC"," SELECT s.supplier_id, SUM(p.product_price) AS total_sales FROM testpzy.ProductSupplierMapping p INNER JOIN testpzy.Products pr ON p.product_id = pr.product_id INNER JOIN testpzy.Suppliers s ON p.supplier_id = s.supplier_id GROUP BY s.supplier_id ORDER BY total_sales DESC;"
"查询每个产品的销售额和排名，按销售额降序排列","3","['select', 'join', 'window_function']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS sales, RANK() OVER (ORDER BY SUM(OrderItems.unit_price * OrderItems.quantity) DESC) AS product_rank FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_name"," SELECT p.product_id, oi.order_item_id, row_number() OVER(PARTITION BY p.product_id ORDER BY (oi.quantity * oi.unit_price * (1 - oi.discount_percentage / 100)) DESC) AS sales_rank FROM hive.testpzy.products p JOIN testpzy.orderitems oi ON p.product_id = oi.product_id;"
"查询所有客户的姓名","1","['select']","['Customers']","SELECT customer_full_name FROM Customers"," SELECT c.customer_full_name FROM hive.testpzy.customers c;"
"查询所有产品名称和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM testpzy.products AS p JOIN testpzy.productspecifications AS ps ON CAST(p.product_id AS varchar) = CAST(ps.product_id AS varchar);"
"查询所有订单的日期和客户姓名","2","['select', 'join']","['Orders', 'Customers']","SELECT Orders.order_date, Customers.customer_full_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"," SELECT o.order_date, c.customer_full_name FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id;"
"查询每个供应商的产品平均价格","3","['select', 'join', 'aggregate']","['Products', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name, AVG(OrderItems.unit_price) AS average_product_price FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Suppliers.supplier_name"," SELECT s.supplier_name, AVG(psm.supply_price) AS average_price FROM testpzy.ProductSupplierMapping psm JOIN testpzy.Suppliers s ON psm.supplier_id = s.supplier_id GROUP BY s.supplier_name;"
"查询每个产品的总销售额和平均销售量","3","['select', 'join', 'aggregate']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales, AVG(OrderItems.quantity) AS average_sales FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id GROUP BY Products.product_name"," SELECT p.product_id, SUM(oi.unit_price * oi.quantity) AS total_sales_amount, AVG(oi.quantity) AS average_quantity FROM testpzy.OrderItems oi JOIN testpzy.Orders o ON oi.order_id = o.order_id JOIN testpzy.Products p ON oi.product_id = p.product_id GROUP BY p.product_id ORDER BY total_sales_amount DESC NULLS LAST;"
"查询所有客户的姓名和联系电话","1","['select']","['Customers']","SELECT customer_full_name, customer_contact_number FROM Customers"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c;"
"查询所有产品的名称和存储容量","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.storage_capacity_in_gb FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.storage_capacity_in_gb FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户的订单总数","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS total_orders, COUNT(DISTINCT o.order_id) AS distinct_orders FROM hive.testpzy.customers c JOIN hive.testpzy.orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id;"
"查询每个产品最近一次销售的价格排名，并按照价格降序排序","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, OrderItems.unit_price, RANK() OVER (PARTITION BY Products.product_id ORDER BY OrderItems.order_id DESC) AS price_rank FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id"," SELECT oi.product_id, oi.unit_price, rank() OVER (PARTITION BY oi.product_id ORDER BY oi.unit_price DESC) AS price_rank FROM hive.testpzy.orderitems oi JOIN hive.testpzy.orders o ON oi.order_id = o.order_id WHERE o.order_status = 'shipped' GROUP BY oi.product_id, oi.unit_price ORDER BY price_rank NULLS LAST;"
"查询所有售后服务申请，并且订单总金额大于1000元的产品","3","['select', 'join', 'subquery']","['Orders', 'AfterSalesServiceRequests']","SELECT * FROM AfterSalesServiceRequests WHERE order_id IN (SELECT order_id FROM Orders WHERE order_total_amount > 1000)"," SELECT a.request_id, a.order_id, o.order_total_amount FROM hive.testpzy.aftersalesservicerequests AS a JOIN hive.testpzy.orders AS o ON a.order_id = o.order_id WHERE o.order_total_amount > 1000;"
"查询所有客户的电子邮件地址","1","['select']","['Customers']","SELECT customer_email_address FROM Customers"," SELECT c.customer_email_address FROM hive.testpzy.customers c;"
"查询产品名称和其处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询订单号和客户姓名","2","['select', 'join']","['Orders', 'Customers']","SELECT Orders.order_id, Customers.customer_full_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"," SELECT o.order_id, c.customer_full_name FROM hive.testpzy.orders AS o JOIN hive.testpzy.customers AS c ON o.customer_id = c.customer_id;"
"查询每个供应商的产品总销量","3","['select', 'join', 'aggregate']","['Orders', 'ProductSupplierMapping', 'Suppliers']","SELECT Suppliers.supplier_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Suppliers JOIN ProductSupplierMapping ON Suppliers.supplier_id = ProductSupplierMapping.supplier_id JOIN Products ON ProductSupplierMapping.product_id = Products.product_id JOIN Orders ON Products.product_id = Orders.product_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Suppliers.supplier_name"," SELECT s.supplier_id, s.supplier_name, SUM(psm.supply_price * o.order_total_amount) AS total_revenue FROM testpzy.Suppliers s JOIN testpzy.ProductSupplierMapping psm ON s.supplier_id = psm.supplier_id JOIN testpzy.Orders o ON psm.product_id = o.order_id GROUP BY s.supplier_id, s.supplier_name;"
"查询每个产品类别下，库存数量大于10且处理器型号为“Intel Core i7”的产品","3","['select', 'join', 'aggregate']","['Products', 'ProductSpecifications', 'Inventory']","SELECT Products.product_name, Products.product_category FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id JOIN Inventory ON Products.product_id = Inventory.product_id WHERE ProductSpecifications.processor_model = 'Intel Core i7' AND Inventory.quantity_in_stock > 10 GROUP BY Products.product_name, Products.product_category"," SELECT p.product_category, COUNT(*) AS number_of_products FROM testpzy.Products p JOIN testpzy.ProductSpecifications ps ON p.product_id = ps.product_id JOIN testpzy.Inventory i ON p.product_id = i.product_id WHERE ps.processor_model ilike '%Intel Core i7%' AND i.quantity_in_stock > 10 GROUP BY p.product_category ORDER BY number_of_products DESC NULLS LAST;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询所有产品名称和其对应的供应商的联系方式","2","['select', 'join']","['Products', 'Suppliers']","SELECT Products.product_name, Suppliers.supplier_contact_email FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id"," SELECT p.product_name, s.supplier_contact_email FROM testpzy.products p JOIN testpzy.suppliers s ON p.product_id = s.supplier_id;"
"查询每个客户的订单总数和总金额","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count, SUM(Orders.order_total_amount) AS total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT o.customer_id, COUNT(o.order_id) AS total_orders, SUM(o.order_total_amount) AS total_order_amount FROM testpzy.Orders o GROUP BY o.customer_id ORDER BY total_orders DESC, total_order_amount DESC;"
"查询每个产品销售额排名靠前的，以及每个产品的平均电池续航时间","3","['select', 'join', 'aggregate', 'window']","['Products', 'ProductSpecifications', 'Orders', 'OrderItems']","WITH RankedSales AS (SELECT Products.product_id, SUM(OrderItems.unit_price * OrderItems.quantity) AS sales_amount FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Products.product_id ORDER BY sales_amount DESC) SELECT p.product_name, rs.sales_amount, AVG(ps.battery_life_estimation_hours) OVER (PARTITION BY p.product_id ORDER BY rs.sales_amount DESC) AS avg_battery_life FROM Products p JOIN RankedSales rs ON p.product_id = rs.product_id JOIN ProductSpecifications ps ON p.product_id = ps.product_id"," SELECT p.product_id, p.product_name, ps.battery_life_estimation_hours, rank() OVER (PARTITION BY p.product_id ORDER BY o.order_total_amount DESC) AS rank FROM testpzy.products p JOIN testpzy.orders o ON CAST(o.customer_id AS varchar) LIKE '%109536%' JOIN testpzy.orderitems oi ON oi.order_item_id = o.order_id AND oi.quantity > 2 JOIN testpzy.productspecifications ps ON ps.product_id = p.product_id;"
"查询销售额最高的供应商，并显示该供应商供应的产品数量和总销售额","3","['select', 'join', 'aggregate', 'subquery']","['Products', 'Suppliers', 'Orders', 'OrderItems']","SELECT s.supplier_name, COUNT(p.product_id) AS product_count, SUM(oi.unit_price * oi.quantity) AS total_sales FROM Suppliers s JOIN ProductSupplierMapping psm ON s.supplier_id = psm.supplier_id JOIN Products p ON psm.product_id = p.product_id JOIN OrderItems oi ON p.product_id = oi.product_id WHERE s.supplier_id IN (SELECT supplier_id FROM ProductSupplierMapping GROUP BY supplier_id ORDER BY SUM(oi.unit_price * oi.quantity) DESC LIMIT 1) GROUP BY s.supplier_name"," SELECT s.supplier_id, COUNT(oi.product_id) AS product_count, SUM(oi.unit_price * oi.quantity) AS total_sales FROM hive.testpzy.suppliers s JOIN hive.testpzy.orders o ON s.supplier_id = o.customer_id JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id GROUP BY s.supplier_id;"
"查询所有客户的姓名和注册日期","1","['select']","['Customers']","SELECT customer_full_name, customer_registered_date FROM Customers"," SELECT c.customer_full_name, c.customer_registered_date FROM hive.testpzy.customers c;"
"查询所有订单的客户姓名和订单总金额","2","['select', 'join']","['Orders', 'Customers']","SELECT Customers.customer_full_name, Orders.order_total_amount FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"," SELECT c.customer_full_name, o.order_total_amount FROM testpzy.customers AS c JOIN testpzy.orders AS o ON c.customer_id = o.customer_id;"
"查询所有产品的型号和屏幕大小","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products AS p JOIN hive.testpzy.productspecifications AS ps ON p.product_id = ps.product_id;"
"查询每个产品的销售数量和总销售额","3","['select', 'join', 'aggregate']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_name, COUNT(OrderItems.order_item_id) AS product_sales_count, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_revenue FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name"," SELECT p.product_id, COUNT(oi.order_item_id) AS number_of_orders, SUM(oi.unit_price * oi.quantity) AS total_revenue FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) GROUP BY p.product_id;"
"查询每个产品的销售数量排名和总销售额排名","3","['select', 'join', 'aggregate', 'window']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_name, COUNT(OrderItems.order_item_id) OVER (ORDER BY COUNT(OrderItems.order_item_id) DESC) AS sales_rank, SUM(OrderItems.unit_price * OrderItems.quantity) OVER (ORDER BY SUM(OrderItems.unit_price * OrderItems.quantity) DESC) AS revenue_rank FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name"," SELECT oi.product_id, o.order_item_id, dense_rank() OVER (PARTITION BY oi.product_id ORDER BY COUNT(oi.order_item_id) DESC) AS rank1, SUM(o.order_total_amount) OVER (PARTITION BY o.customer_id ORDER BY o.order_date ROWS BETWEEN UNBOUNDED preceding AND CURRENT ROW) AS cumulative_spending FROM hive.testpzy.orderitems oi JOIN hive.testpzy.orders o ON oi.order_id = o.order_id;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询产品名称、处理器型号和存储容量","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model, ProductSpecifications.storage_capacity_in_gb FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model, CAST(ps.storage_capacity_in_gb AS VARCHAR) AS storage_capacity FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询订单ID、客户姓名和订单日期","2","['select', 'join']","['Orders', 'Customers']","SELECT Orders.order_id, Customers.customer_full_name, Orders.order_date FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"," SELECT o.order_id, c.customer_full_name, o.order_date FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id;"
"查询每个产品在不同供应商下的销售额","3","['select', 'join', 'aggregate']","['Products', 'Suppliers', 'Orders', 'OrderItems']","SELECT Products.product_name, Suppliers.supplier_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id JOIN Orders ON Products.product_id = Orders.order_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Products.product_name, Suppliers.supplier_name"," SELECT p.product_id, s.supplier_name, o.order_total_amount FROM hive.testpzy.products AS p JOIN hive.testpzy.suppliers AS s ON p.product_sku_code = s.supplier_id JOIN hive.testpzy.orders AS o ON o.customer_id = s.supplier_id;"
"查询每个产品的平均内存大小和销售额排名靠前","3","['select', 'join', 'aggregate', 'window']","['Products', 'ProductSpecifications', 'Orders', 'OrderItems']","SELECT Products.product_name, AVG(ProductSpecifications.ram_capacity_in_gb) AS average_memory, RANK() OVER (ORDER BY SUM(OrderItems.unit_price * OrderItems.quantity) DESC) AS sales_rank FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id JOIN Orders ON Products.product_id = Orders.order_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Products.product_name"," SELECT p.product_id, AVG(ps.ram_capacity_in_gb) AS average_ram_capacity, SUM(oi.quantity * oi.unit_price) AS total_sales FROM testpzy.Products p JOIN testpzy.ProductSpecifications ps ON p.product_id = ps.product_id JOIN testpzy.Orders o ON o.customer_id = 100002 JOIN testpzy.OrderItems oi ON oi.order_item_id IN (SELECT order_item_id FROM testpzy.OrderItems WHERE order_id = 123456) GROUP BY p.product_id;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询产品名称、供应商名称和供货价格","2","['select', 'join']","['Products', 'Suppliers']","SELECT Products.product_name, Suppliers.supplier_name, ProductSupplierMapping.supply_price FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id"," SELECT p.product_name, s.supplier_name FROM testpzy.products AS p JOIN testpzy.suppliers AS s ON p.product_id = s.supplier_id;"
"查询所有订单状态为'已发货'的客户姓名和订单日期","2","['select', 'join', 'filter']","['Orders', 'Customers']","SELECT Customers.customer_full_name, Orders.order_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.order_status = '已发货'"," SELECT o.customer_full_name, o.order_date FROM hive.testpzy.orders o WHERE o.order_status = '已发货'"
"查询每个产品类型下的平均销售价格，以及总销量超过100的product_name","3","['select', 'join', 'aggregate', 'filter']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_category, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_sale_price FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_category HAVING SUM(OrderItems.quantity) > 100 UNION SELECT product_name, '' AS average_sale_price FROM Products WHERE product_id IN (SELECT DISTINCT product_id FROM OrderItems WHERE quantity > 100)"," SELECT p.product_category, AVG(oi.unit_price) AS average_unit_price FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) GROUP BY p.product_category HAVING SUM(oi.quantity) > 100 ORDER BY average_unit_price DESC NULLS LAST;"
"查询每个订单的商品总价，以及其对应产品的供应链成本和库存数量排名","3","['select', 'join', 'window']","['Orders', 'Inventory', 'ProductSupplierMapping']","SELECT Orders.order_id, SUM(OrderItems.unit_price * OrderItems.quantity) AS order_total_value, ProductSupplierMapping.supply_price AS supply_chain_cost, (SELECT quantity_in_stock FROM Inventory WHERE product_id = Products.product_id ORDER BY quantity_in_stock DESC) AS inventory_rank FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id WINDOW w AS (ORDER BY supply_price)"," SELECT p.product_name, s.supplier_name, SUM(o.order_total_amount) AS total_sales, i.quantity_in_stock, rank() OVER (PARTITION BY p.product_id ORDER BY SUM(o.order_total_amount) DESC) AS sales_rank FROM hive.testpzy.orders o JOIN testpzy.ProductSupplierMapping m ON o.product_id = m.product_id JOIN suppliers s ON m.supplier_id = s.supplier_id JOIN testpzy.Inventory i ON m.product_id = i.product_id JOIN products p ON m.product_id = p.product_id GROUP BY p.product_name, s.supplier_name, i.quantity_in_stock;"
"查询所有客户的注册日期","1","['select']","['Customers']","SELECT customer_registered_date FROM Customers"," SELECT c.customer_registered_date FROM hive.testpzy.customers c;"
"查询所有订单及其对应的产品名称","2","['select', 'join']","['Orders', 'Products']","SELECT Orders.order_id, Products.product_name FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id"," SELECT o.order_id, p.product_name FROM testpzy.orders o JOIN testpzy.products p ON o.customer_id = p.product_id;"
"查询所有产品的型号和屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products p JOIN hive.testpzy.productspecifications ps ON p.product_id = ps.product_id;"
"查询每个客户在过去一个月购买的产品种类数量","3","['select', 'join', 'aggregate']","['Orders', 'Customers', 'Products']","SELECT Customers.customer_full_name, COUNT(DISTINCT Products.product_name) AS product_count FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id WHERE Orders.order_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH) GROUP BY Customers.customer_full_name"," SELECT c.customer_full_name, COUNT(DISTINCT p.product_id) AS number_of_products FROM testpzy.Orders o JOIN testpzy.Customers c ON o.customer_id = c.customer_id JOIN testpzy.Products p ON o.order_total_amount > 1000 GROUP BY c.customer_full_name, EXTRACT(MONTH FROM o.order_date) ORDER BY number_of_products DESC NULLS LAST;"
"查询每个产品在过去一个月内的销售额排名，并显示该产品的销售额和排名","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS sales_amount, RANK() OVER (PARTITION BY Products.product_id ORDER BY SUM(OrderItems.unit_price * OrderItems.quantity) DESC) AS product_rank FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id WHERE Orders.order_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH) GROUP BY Products.product_name"," SELECT p.product_id, SUM(oi.quantity * oi.unit_price) AS total_sales FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id JOIN hive.testpzy.products p ON oi.product_id = p.product_id WHERE o.order_date >= CURRENT_DATE - INTERVAL '1 month' GROUP BY p.product_id ORDER BY total_sales DESC;"
"查询所有客户的姓名和电子邮件地址","1","['select']","['Customers']","SELECT customer_full_name, customer_email_address FROM Customers"," SELECT c.customer_full_name, c.customer_email_address FROM hive.testpzy.customers c;"
"查询所有产品名称和其对应的屏幕尺寸","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.screen_size_in_inches FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.screen_size_in_inches FROM hive.testpzy.products AS p JOIN hive.testpzy.productspecifications AS ps ON p.product_id = ps.product_id;"
"查询每个客户的订单数量和总消费金额","2","['select', 'join', 'aggregate']","['Orders', 'Customers']","SELECT Customers.customer_full_name, COUNT(Orders.order_id) AS order_count, SUM(Orders.order_total_amount) AS total_spent FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, COUNT(o.order_id) AS customer_order_count, SUM(o.order_total_amount) AS total_order_amount FROM testpzy.Orders o JOIN testpzy.Customers c ON o.customer_id = c.customer_id GROUP BY c.customer_id ORDER BY c.customer_id NULLS LAST;"
"查询每个产品销量排名和该产品在所有产品的平均销售价格","3","['select', 'join', 'aggregate', 'window']","['Products', 'Orders', 'OrderItems']","SELECT Products.product_name, COUNT(OrderItems.quantity) OVER (PARTITION BY Products.product_id ORDER BY COUNT(OrderItems.quantity) DESC) AS sales_rank, AVG(OrderItems.unit_price * OrderItems.quantity) OVER () AS average_sale_price FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Products.product_name"," SELECT p.product_id, SUM(oi.quantity) AS total_quantity, AVG(oi.unit_price) AS average_unit_price FROM hive.testpzy.products p JOIN hive.testpzy.orderitems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) GROUP BY p.product_id;"
"查询所有订单中出现售后服务的客户的姓名和售后服务申请日期","3","['select', 'join', 'subquery']","['Orders', 'AfterSalesServiceRequests']","SELECT Customers.customer_full_name, AfterSalesServiceRequests.request_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN AfterSalesServiceRequests ON Orders.order_id = AfterSalesServiceRequests.order_id GROUP BY Customers.customer_full_name, AfterSalesServiceRequests.request_date"," SELECT o.customer_id, r.request_date FROM hive.testpzy.orders AS o JOIN hive.testpzy.aftersalesservicerequests AS r ON o.order_id = r.order_id ORDER BY o.customer_id, r.request_date NULLS LAST;"
"查询所有客户的姓名","1","['select']","['Customers']","SELECT customer_full_name FROM Customers"," SELECT c.customer_full_name FROM testpzy.Customers c;"
"查询产品名称和处理器型号","2","['select', 'join']","['Products', 'ProductSpecifications']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id"," SELECT p.product_name, ps.processor_model FROM hive.testpzy.products AS p INNER JOIN hive.testpzy.productspecifications AS ps ON p.product_id = ps.product_id;"
"查询订单号和客户姓名","2","['select', 'join']","['Orders', 'Customers']","SELECT Orders.order_id, Customers.customer_full_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"," SELECT o.order_id, c.customer_full_name FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id;"
"查询每个客户的平均订单金额","3","['select', 'join', 'aggregate']","['Orders', 'Products', 'Customers']","SELECT Customers.customer_full_name, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_order_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Customers.customer_full_name"," SELECT c.customer_id, AVG(o.order_total_amount) AS average_order_amount FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id GROUP BY c.customer_id;"
"查询每个订单的平均商品价格，按日期排序","3","['select', 'join', 'aggregate', 'window']","['Orders', 'OrderItems']","SELECT order_date, AVG(unit_price) OVER (PARTITION BY order_id ORDER BY order_item_id) AS average_product_price FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id ORDER BY order_date"," SELECT AVG(o.order_total_amount / i.quantity) AS average_price FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems i ON o.order_id = i.order_id ORDER BY o.order_date NULLS LAST;"
"查询所有客户的电子邮件地址","1","['select']","['Customers']","SELECT customer_email_address FROM Customers"," SELECT c.customer_email_address FROM hive.testpzy.customers c;"
"查询产品名称和供货商联系电话，条件是产品分类为'笔记本电脑'","2","['select', 'join']","['Products', 'Suppliers']","SELECT Products.product_name, Suppliers.supplier_contact_number FROM Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id WHERE Products.product_category = '笔记本电脑'"," SELECT p.product_name, s.supplier_contact_number FROM hive.testpzy.products AS p JOIN testpzy.Suppliers AS s ON p.product_id = s.supplier_id WHERE p.product_category ilike '%笔记本电脑%'"
"查询每个产品的销售数量","2","['select', 'join', 'aggregate']","['Orders', 'Products']","SELECT Products.product_name, COUNT(OrderItems.order_item_id) AS product_sales FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id GROUP BY Products.product_name"," SELECT p.product_id, COUNT(o.order_id) AS total_orders FROM testpzy.Orders o JOIN testpzy.Products p ON o.customer_id = p.product_sku_code GROUP BY p.product_id;"
"查询每个客户的平均订单金额和排名","3","['select', 'join', 'aggregate', 'window']","['Orders', 'Products', 'Customers']","SELECT Customers.customer_full_name, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_order_amount, RANK() OVER (ORDER BY AVG(OrderItems.unit_price * OrderItems.quantity) DESC) AS rank FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Customers.customer_full_name"," SELECT c.customer_full_name, AVG(o.order_total_amount) AS average_order_total_amount FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id GROUP BY c.customer_full_name ORDER BY average_order_total_amount DESC;"
"查询产品名称和处理器型号，条件是产品的存储容量大于500GB且最近订单日期在2023年1月1日之后","3","['select', 'join', 'subquery']","['Products', 'ProductSpecifications', 'Orders']","SELECT Products.product_name, ProductSpecifications.processor_model FROM Products JOIN ProductSpecifications ON Products.product_id = ProductSpecifications.product_id WHERE ProductSpecifications.storage_capacity_in_gb > 500 AND Products.product_id IN (SELECT product_id FROM Orders WHERE order_date >= '2023-01-01')"," SELECT p.product_name, ps.processor_model FROM hive.testpzy.products AS p JOIN testpzy.productspecifications AS ps ON p.product_id = ps.product_id JOIN (SELECT o.customer_id, MAX(o.order_date) AS max_order_date FROM testpzy.orders o WHERE EXTRACT(YEAR FROM o.order_date) >= 2023 GROUP BY o.customer_id) AS co ON p.product_id = co.customer_id WHERE ps.storage_capacity_in_gb > 500 AND co.max_order_date < to_date('2023-01-01', 'YYYY-MM-DD');"
"插入一个新的客户信息：姓名为张三，邮箱地址为zhangsan@example.com，联系电话为1234567890","1","['insert']","['Customers']","INSERT INTO Customers (customer_full_name, customer_email_address, customer_contact_number) VALUES ('张三', 'zhangsan@example.com', '1234567890')"," INSERT INTO testpzy.customers (customer_full_name, customer_email_address, customer_contact_number) VALUES ('张三', 'zhangsan@example.com', '1234567890')"
"将产品型号为‘Laptop A’插入到供应商ID为1的供应列表中，供货价格为500美元","2","['insert', 'join']","['Products', 'ProductSupplierMapping']","INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price) SELECT product_id, 1, 500 FROM Products WHERE product_name = 'Laptop A'"," SELECT ps.product_id, ps.supplier_id, ps.supply_price FROM hive.testpzy.productsuppliermapping ps WHERE ps.product_id IN (SELECT p.product_id FROM hive.testpzy.products p WHERE p.product_name='Laptop A');"
"修改订单ID为1001的商品‘Laptop B’的数量从2个增加到3个","2","['update', 'join']","['Orders', 'OrderItems']","UPDATE OrderItems SET quantity = 3 WHERE order_id = 1001 AND product_id = (SELECT product_id FROM Products WHERE product_name = 'Laptop B')"," SELECT oi.order_item_id, oi.order_id, oi.product_id, oi.quantity, oi.unit_price, oi.discount_percentage FROM hive.testpzy.orderitems oi WHERE oi.order_id = 1001 AND oi.product_id = 'Laptop B' ;"
"插入一个新的产品信息：型号为‘Desktop X’，分类为‘工作站’，配置为Intel Core i9处理器，16GB RAM，512GB SSD存储，并关联供应商ID为2，供货价格为800美元。","3","['insert', 'join', 'aggregate']","['Products', 'ProductSpecifications', 'Suppliers']","INSERT INTO Products (product_name, product_category) VALUES ('Desktop X', '工作站'); 
 INSERT INTO ProductSpecifications (product_id, processor_model, ram_capacity_in_gb, storage_type, storage_capacity_in_gb) SELECT LAST_INSERT_ID(), 'Intel Core i9', 16, 'SSD', 512 FROM Products WHERE product_name = 'Desktop X';
 INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price) SELECT LAST_INSERT_ID(), 2, 800 FROM Products WHERE product_name = 'Desktop X'"," SELECT p.product_id, p.product_name, ps.processor_model, ps.ram_capacity_in_gb, s.supplier_id FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id JOIN testpzy.suppliers s ON p.product_id = s.supplier_id WHERE p.product_id = 507071;"
"查询每个客户的订单总数和平均购买金额，并按订单总数排序。","3","['select', 'join', 'aggregate']","['Orders', 'Customers', 'Products']","SELECT Customers.customer_full_name, COUNT(DISTINCT Orders.order_id) AS order_count, AVG(OrderItems.unit_price * OrderItems.quantity) AS average_purchase_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY Customers.customer_full_name ORDER BY order_count DESC"," SELECT c.customer_id, COUNT(o.order_id) AS total_orders, AVG(o.order_total_amount) AS average_order_amount FROM testpzy.Customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY total_orders DESC;"
"插入一个新的客户信息","1","['insert']","['Customers']","INSERT INTO Customers (customer_id, customer_full_name, customer_email_address, customer_contact_number, customer_shipping_address, customer_registered_date) VALUES (101, '张三', 'zhangsan@example.com', '1234567890', '北京市海淀区', '2023-03-15')"," INSERT INTO hive.testpzy.customers (customer_id, customer_full_name, customer_email_address, customer_contact_number, customer_shipping_address) VALUES (757071, 'John Doe', 'john@example.com', '1234567890', '123 Any Street')"
"为产品'笔记本电脑'添加供应商信息，并设定供应价格和供货周期","2","['insert']","['Products', 'Suppliers', 'ProductSupplierMapping']","INSERT INTO Products (product_id, product_name, product_category, product_description, product_launch_date, warranty_period_in_months, product_sku_code, product_status) VALUES (102, '笔记本电脑', '笔记本', '高性能笔记本电脑', '2023-03-01', 12, 'NB-123', '在售')
INSERT INTO Suppliers (supplier_id, supplier_name, supplier_contact_email, supplier_contact_number, supplier_country) VALUES (103, '供应商A', 'a@example.com', '9876543210', '中国')
INSERT INTO ProductSupplierMapping (mapping_id, product_id, supplier_id, supply_price, supply_lead_time_days) VALUES (101, 102, 103, 5000.00, 7)"," SELECT p.product_name, s.supplier_name, ps.supply_price, ps.supply_lead_time_days FROM hive.testpzy.products p JOIN hive.testpzy.productsuppliermapping ps ON p.product_id = ps.product_id JOIN hive.testpzy.suppliers s ON ps.supplier_id = s.supplier_id WHERE p.product_name ilike '%笔记本电脑%' AND ps.supply_price IS NULL AND ps.supply_lead_time_days IS NULL;"
"为客户'李四'创建一个订单，包含两台笔记本电脑","2","['insert']","['Orders', 'OrderItems']","INSERT INTO Orders (order_id, customer_id, order_date, order_total_amount, order_status, shipping_tracking_number, estimated_delivery_date) VALUES (104, 102, '2023-03-16', 10000.00, '已支付', 'TRK-12345', '2023-03-23')
INSERT INTO OrderItems (order_item_id, order_id, product_id, quantity, unit_price, discount_percentage) VALUES (105, 104, 102, 2, 5000.00, 0.00)"," SELECT ot.order_id, ot.customer_id, ot.order_date, ot.order_total_amount, ot.order_status, ot.shipping_tracking_number, ot.estimated_delivery_date FROM hive.testpzy.orders ot WHERE ot.customer_id = (SELECT customer_id FROM hive.testpzy.orders WHERE customer_full_name ilike '%李四%') ORDER BY ot.order_id NULLS LAST;"
"更新产品'笔记本电脑'的处理器型号为'英特尔酷睿i9'，并且屏幕尺寸由15英寸改为16英寸","3","['update']","['Products', 'ProductSpecifications']","UPDATE Products SET product_description = '高性能笔记本电脑, 英特尔酷睿i9 处理器' WHERE product_id = 102
UPDATE ProductSpecifications SET processor_model = '英特尔酷睿i9' WHERE product_id = 102
UPDATE ProductSpecifications SET screen_size_in_inches = 16.0 WHERE product_id = 102"," SELECT p.product_id, ps.processor_model, ps.screen_size_in_inches FROM testpzy.products p JOIN testpzy.productspecifications ps ON p.product_id = ps.product_id WHERE p.product_name = '笔记本电脑' AND ps.has_touchscreen = TRUE;"
"删除所有关于产品'笔记本电脑'的售后服务申请记录","3","['delete']","['AfterSalesServiceRequests']","DELETE FROM AfterSalesServiceRequests WHERE product_id = 102"," SELECT * FROM hive.testpzy.aftersalesservicerequests a WHERE a.product_id = '笔记本电脑' DELETE FROM hive.testpzy.aftersalesservicerequests a WHERE a.product_id = '笔记本电脑';"
"添加一个新客户: 姓名为张三，邮箱地址为 zhangsan@example.com，联系电话为 1234567890，注册日期为 2023-10-26","1","['insert']","['Customers']","INSERT INTO Customers (customer_full_name, customer_email_address, customer_contact_number, customer_registered_date) VALUES ('张三', 'zhangsan@example.com', '1234567890', '2023-10-26')"," SELECT * FROM hive.testpzy.customers c WHERE c.customer_full_name ilike '%张三%' AND c.customer_email_address ilike '%zhangsan@example.com%' AND c.customer_contact_number = '1234567890' AND to_char(c.customer_registered_date, 'YYYY-MM-DD') = '2023-10-26';"
"为产品id为 1 的产品添加供应商，供应商id为 2，供货价格为 500.00，供货周期为 7 天","2","['insert']","['ProductSupplierMapping']","INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES (1, 2, 500.00, 7)"," INSERT INTO hive.testpzy.productsuppliermapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES (1, 2, 500.00, 7)"
"创建一个订单，客户id为 1，订单日期为 2023-10-27，总金额为 1000.00，添加一个商品，产品id为 2，数量为 2，单价为 250.00","2","['insert']","['Orders', 'OrderItems']","INSERT INTO Orders (customer_id, order_date, order_total_amount) VALUES (1, '2023-10-27', 1000.00);
INSERT INTO OrderItems (order_id, product_id, quantity, unit_price) VALUES ((SELECT MAX(order_id) FROM Orders), 2, 2, 250.00)"," SELECT * FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id WHERE o.customer_id = 1 AND o.order_date = '2023-10-27' AND o.order_total_amount = 1000.00;"
"将产品id为 1 的产品的处理器型号更新为 Intel Core i7-13700H，并更新屏幕大小为 15.6 英寸","3","['update']","['Products', 'ProductSpecifications']","UPDATE Products SET product_description = 'Updated Product Description' WHERE product_id = 1;
UPDATE ProductSpecifications SET processor_model = 'Intel Core i7-13700H', screen_size_in_inches = 15.6 WHERE product_id = 1"," SELECT hive.testpzy.products.product_id, hive.testpzy.products.processor_model, hive.testpzy.products.screen_size_in_inches FROM hive.testpzy.products WHERE hive.testpzy.products.product_id = 1;"
"删除所有关于产品id为 3 的售后服务申请记录，并删除关联的订单记录。","3","['delete']","['AfterSalesServiceRequests', 'Orders']","DELETE FROM AfterSalesServiceRequests WHERE product_id = 3;
DELETE FROM Orders WHERE order_id IN (SELECT order_id FROM OrderItems WHERE product_id = 3)"," SELECT o.order_id FROM testpzy.orders o JOIN testpzy.aftersalesservicerequests a ON o.order_id = a.order_id WHERE a.request_id = 757071;"
"插入一个新的客户信息：姓名为 John Doe，邮箱地址为 john.doe@example.com，电话号码为 123-456-7890","1","['insert']","['Customers']","INSERT INTO Customers (customer_full_name, customer_email_address, customer_contact_number) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890')"," INSERT INTO hive.testpzy.customers (customer_full_name, customer_email_address, customer_contact_number) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890')"
"为产品型号为 'Laptop X' 的供应商添加信息，供应商名为 'Tech Solutions'，供货价格为 1000.00 美元，供货周期为 7 天","2","['insert']","['Products', 'Suppliers', 'ProductSupplierMapping']","INSERT INTO Products (product_name, product_category, product_description, product_launch_date, warranty_period_in_months, product_sku_code, product_status) VALUES ('Laptop X', 'Laptop', 'High-performance laptop', '2023-10-26', 12, 'LAPTOPX001', 'Available');
INSERT INTO Suppliers (supplier_name, supplier_contact_email, supplier_contact_number, supplier_country) VALUES ('Tech Solutions', 'techsolutions@example.com', '555-123-4567', 'USA');
INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES ((SELECT product_id FROM Products WHERE product_name = 'Laptop X'), (SELECT supplier_id FROM Suppliers WHERE supplier_name = 'Tech Solutions'), 1000.00, 7)"," SELECT * FROM hive.testpzy.productsuppliermapping WHERE supplier_name = 'Tech Solutions';"
"为一个订单添加商品信息，订单号为 12345，购买了 'Laptop X' 产品，数量为 2 件，单价为 1000.00 美元，没有折扣","2","['insert']","['Orders', 'OrderItems']","INSERT INTO Orders (customer_id, order_date, order_total_amount, order_status, shipping_tracking_number, estimated_delivery_date) VALUES ((SELECT customer_id FROM Customers WHERE customer_full_name = 'John Doe'), '2023-10-27', 2000.00, 'Processing', 'ORD-12345-ABC', '2023-11-05');
INSERT INTO OrderItems (order_id, product_id, quantity, unit_price, discount_percentage) VALUES (LAST_INSERT_ID(), (SELECT product_id FROM Products WHERE product_name = 'Laptop X'), 2, 1000.00, 0)"," SELECT oi.order_item_id, oi.order_id, oi.product_id, oi.quantity, oi.unit_price FROM hive.testpzy.orderitems oi;"
"根据每个客户的总订单金额，将客户排序并显示前三个最大的消费者的姓名和总消费金额。同时，为每一个新客户插入一条记录","3","['insert', 'aggregate']","['Customers', 'Orders', 'OrderItems', 'Products']","INSERT INTO Customers (customer_full_name, customer_email_address, customer_contact_number) VALUES ('Alice Johnson', 'alice.johnson@example.com', '987-654-3210');
SELECT customer_full_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_spending FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY customer_full_name ORDER BY total_spending DESC LIMIT 3"," SELECT c.customer_full_name, SUM(oi.quantity * p.unit_price) AS total_order_amount FROM testpzy.Customers c JOIN testpzy.Orders o ON c.customer_id = o.customer_id JOIN testpzy.OrderItems oi ON o.order_id = oi.order_id JOIN testpzy.Products p ON oi.product_id = p.product_id GROUP BY c.customer_full_name ORDER BY total_order_amount DESC NULLS LAST LIMIT 3;"
"为产品 'Laptop X' 添加库存信息，数量为 10 件，位于仓库 A。同时，查询所有产品的总库存量和每个仓库的库存总量。","3","['insert', 'aggregate']","['Products', 'Inventory', 'Orders', 'OrderItems']","INSERT INTO Inventory (product_id, warehouse_location, quantity_in_stock, last_restock_date, reorder_threshold) VALUES ((SELECT product_id FROM Products WHERE product_name = 'Laptop X'), 'Warehouse A', 10, CURRENT_DATE(), 5);
SELECT SUM(quantity_in_stock) AS total_products_inventory FROM Inventory GROUP BY warehouse_location"," SELECT p.product_name, SUM(i.quantity_in_stock) AS total_quantity FROM testpzy.Products p JOIN testpzy.Inventory i ON p.product_id = i.product_id GROUP BY p.product_name ORDER BY total_quantity DESC NULLS LAST;"
"插入一位新客户: John Doe, john.doe@example.com, 123-456-7890, 123 Main Street, 2023-03-15","1","['insert']","['Customers']","INSERT INTO Customers (customer_full_name, customer_email_address, customer_contact_number, customer_shipping_address, customer_registered_date) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890', '123 Main Street', '2023-03-15')"," SELECT COUNT(*) FROM hive.testpzy.customers WHERE customer_id = (SELECT MAX(customer_id) FROM hive.testpzy.customers);"
"插入一台新产品: 'Laptop X', 'Electronics', 'A high-performance laptop', 2023-03-10, 24, 'LAPX-123', 'Available', 供货商为 'TechCo'","2","['insert']","['Products', 'Suppliers']","INSERT INTO Products (product_name, product_category, product_description, product_launch_date, warranty_period_in_months, product_sku_code, product_status) VALUES ('Laptop X', 'Electronics', 'A high-performance laptop', '2023-03-10', 24, 'LAPX-123', 'Available'); INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES (LAST_INSERT_ID(), (SELECT supplier_id FROM Suppliers WHERE supplier_name = 'TechCo'), 800.00, 7); "," SELECT p.product_id, p.product_name, p.product_category, p.product_description, p.product_launch_date, p.warranty_period_in_months, p.product_sku_code, p.product_status FROM hive.testpzy.products p WHERE p.supplier_name = 'TechCo' LIMIT 1;"
"查询所有订单的客户姓名和订单日期","2","['select', 'join']","['Orders', 'Customers']","SELECT Customers.customer_full_name, Orders.order_date FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id"," SELECT o.order_id, c.customer_full_name, o.order_date FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id;"
"更新'Laptop X'的屏幕尺寸为15.6英寸","3","['update']","['Products', 'ProductSpecifications']","UPDATE Products SET product_status = 'Discontinued' WHERE product_sku_code = 'LAPX-123'; UPDATE ProductSpecifications SET screen_size_in_inches = 15.6 WHERE product_id = (SELECT product_id FROM Products WHERE product_sku_code = 'LAPX-123')"," SELECT p.product_screen_size_in_inches FROM hive.testpzy.products p WHERE p.product_name = 'Laptop X';"
"查询每个产品的总销售额和销量","3","['select', 'aggregate', 'join']","['Orders', 'OrderItems', 'Products']","SELECT Products.product_name, SUM(OrderItems.unit_price * OrderItems.quantity) AS total_sales, COUNT(OrderItems.order_item_id) AS total_sold FROM Products JOIN OrderItems ON Products.product_id = OrderItems.product_id JOIN Orders ON OrderItems.order_id = Orders.order_id GROUP BY Products.product_name"," SELECT p.product_id, SUM(oi.unit_price) OVER (PARTITION BY p.product_id ORDER BY oi.order_item_id ROWS BETWEEN UNBOUNDED preceding AND CURRENT ROW) AS cumulative_unit_price, COUNT(*) OVER (PARTITION BY p.product_id ORDER BY oi.order_item_id ROWS BETWEEN UNBOUNDED preceding AND CURRENT ROW) AS row_count FROM testpzy.Products p JOIN testpzy.OrderItems oi ON CAST(p.product_id AS varchar) = CAST(oi.product_id AS varchar) JOIN testpzy.Orders o ON oi.order_id = o.order_id;"
"插入一位新的客户：姓名为 John Doe，邮箱地址为 john.doe@example.com，联系电话为 123-456-7890，注册日期为 2023-10-26","1","['insert']","['Customers']","INSERT INTO Customers (customer_full_name, customer_email_address, customer_contact_number, customer_registered_date) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890', '2023-10-26')",""
"将产品“Laptop A”分配给供应商“Tech Solutions”，供货价格为 800.00，供货周期为 5 天","2","['insert']","['Products', 'ProductSupplierMapping']","INSERT INTO Products (product_name, product_category) VALUES ('Laptop A', 'Electronics'); INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES ((SELECT product_id FROM Products WHERE product_name = 'Laptop A'), (SELECT supplier_id FROM Suppliers WHERE supplier_name = 'Tech Solutions'), 800.00, 5)"," SELECT p.product_name, s.supplier_id, m.supply_price, m.supply_lead_time_days FROM hive.testpzy.products p JOIN hive.testpzy.productsuppliermapping m ON p.product_id = m.product_id JOIN hive.testpzy.suppliers s ON m.supplier_id = s.supplier_id WHERE p.product_name ilike '%Laptop A%' AND m.supply_price = 800.00 AND m.supply_lead_time_days = 5;"
"创建一个新的订单，客户ID为 1，包含一个“Laptop A”产品，数量为 2，单位价格为 800.00元","2","['insert']","['Orders', 'OrderItems']","INSERT INTO Orders (customer_id, order_date, order_total_amount, order_status) VALUES (1, '2023-10-27', 1600.00, 'Processing'); INSERT INTO OrderItems (order_id, product_id, quantity, unit_price) VALUES ((SELECT order_id FROM Orders WHERE customer_id = 1 ORDER BY order_id DESC LIMIT 1), (SELECT product_id FROM Products WHERE product_name = 'Laptop A'), 2, 800.00)",""
"修改订单ID为 1的“Laptop A”产品的数量从2个减少到1个，更新库存记录，同时将重订阈值设为 50%","3","['update']","['Orders', 'Inventory']","UPDATE Orders SET order_total_amount = (SELECT unit_price * quantity FROM OrderItems WHERE product_id = (SELECT product_id FROM Products WHERE product_name = 'Laptop A') AND order_id = 1) - (unit_price * quantity) WHERE order_id = 1; UPDATE Inventory SET quantity_in_stock = quantity_in_stock - 1 WHERE product_id = (SELECT product_id FROM Products WHERE product_name = 'Laptop A'); UPDATE Inventory SET reorder_threshold = round(quantity_in_stock * 0.50) WHERE product_id = (SELECT product_id FROM Products WHERE product_name = 'Laptop A')"," SELECT o.order_id, i.inventory_id, i.reorder_threshold FROM hive.testpzy.orders o JOIN hive.testpzy.inventory i ON o.customer_id = i.product_id WHERE o.order_id = 1;"
"删除所有售后服务申请，其中产品ID为 (SELECT product_id FROM Products WHERE product_name = 'Laptop A') 的","3","['delete']","['AfterSalesServiceRequests']","DELETE FROM AfterSalesServiceRequests WHERE product_id = (SELECT product_id FROM Products WHERE product_name = 'Laptop A')"," SELECT a.request_id, a.order_id, a.product_id, a.request_date, a.issue_description, a.resolution_status, a.resolution_date FROM testpzy.aftersalesservicerequests a WHERE a.product_id = (SELECT product_id FROM Products WHERE product_name = 'Laptop A') ORDER BY a.request_id NULLS LAST;"
"插入一位新客户：姓名为 '张三'，邮箱地址为 'zhangsan@example.com'，联系电话为 '1234567890'，注册日期为 '2023-10-26'","1","['insert']","['Customers']","INSERT INTO Customers (customer_full_name, customer_email_address, customer_contact_number, customer_registered_date) VALUES ('张三', 'zhangsan@example.com', '1234567890', '2023-10-26')"," INSERT INTO hive.testpzy.customers (customer_full_name, customer_email_address, customer_contact_number, customer_registered_date) VALUES ('张三', 'zhangsan@example.com', '1234567890', '2023-10-26')"
"为一款名为 '笔记本电脑' 的产品插入一条记录，并指定其供应商为 '华硕'，供货价格为 1000 元，供货周期为 7 天","2","['insert', 'join']","['Products', 'ProductSupplierMapping']","INSERT INTO Products (product_name, product_category, product_description) VALUES ('笔记本电脑', '电子产品', '高性能便携式电脑');
INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES ((SELECT product_id FROM Products WHERE product_name = '笔记本电脑'), (SELECT supplier_id FROM Suppliers WHERE supplier_name = '华硕'), 1000, 7)"," SELECT * FROM testpzy.ProductSupplierMapping psm WHERE psm.product_id = (SELECT product_id FROM testpzy.Products WHERE product_name = '笔记本电脑') AND psm.supplier_id = (SELECT supplier_id FROM testpzy.ProductSupplierMapping WHERE product_id = (SELECT product_id FROM testpzy.Products WHERE product_name = '笔记本电脑')) AND psm.supply_price = 1000 AND psm.supply_lead_time_days = 7;"
"插入一条订单记录，客户为张三（customer_id = 1），订单总额为 2000 元，包含两款笔记本电脑（product_id 为 1 和 2）的购买信息","2","['insert', 'join']","['Orders', 'OrderItems']","INSERT INTO Orders (customer_id, order_date, order_total_amount) VALUES (1, '2023-10-27', 2000);
INSERT INTO OrderItems (order_id, product_id, quantity, unit_price) VALUES ((SELECT order_id FROM Orders WHERE customer_id = 1), 1, 1, 1000),
(SELECT order_id FROM Orders WHERE customer_id = 1), 2, 1, 1000)"," INSERT INTO hive.testpzy.orders (order_id, customer_id, order_total_amount) VALUES (1, 1, 2000.00); SELECT oi.order_item_id, oi.order_id, p.product_name FROM hive.testpzy.orderitems AS oi JOIN hive.testpzy.products AS p ON oi.product_id = p.product_id WHERE order_id IN (SELECT order_id FROM hive.testpzy.orders WHERE customer_id = 1)"
"为 '笔记本电脑' 产品插入一条库存记录，并更新所有供应商的供货价格为最新的市场价格（假设最新市场价格为 1200 元）","3","['insert', 'join', 'aggregate']","['Products', 'Suppliers', 'Inventory']","INSERT INTO Inventory (product_id, warehouse_location, quantity_in_stock, last_restock_date, reorder_threshold) VALUES ((SELECT product_id FROM Products WHERE product_name = '笔记本电脑'), '仓库A', 50, '2023-10-27', 10);
UPDATE ProductSupplierMapping SET supply_price = 1200 WHERE product_id = (SELECT product_id FROM Products WHERE product_name = '笔记本电脑')",""
"插入一个售后服务申请记录，订单号为 'ORD123'，产品为 '手机'（product_id 为 4），客户提交的请求日期为 '2023-10-28'，问题描述为 '屏幕破裂'。查询该售后服务申请的所有相关信息","3","['insert', 'select', 'join']","['AfterSalesServiceRequests', 'Orders', 'Products']","INSERT INTO AfterSalesServiceRequests (order_id, product_id, request_date, issue_description) VALUES ('ORD123', 4, '2023-10-28', '屏幕破裂');
SELECT * FROM AfterSalesServiceRequests WHERE order_id = 'ORD123'"," SELECT * FROM testpzy.AfterSalesServiceRequests AS r WHERE r.order_id = 123 AND r.product_id = 4 AND r.issue_description ILIKE '%屏幕破裂%' AND r.request_date = '2023-10-28';"
"添加一位新客户：姓名为张三，邮箱地址为zhangsan@example.com，联系电话为1234567890","1","['insert']","['Customers']","INSERT INTO Customers (customer_full_name, customer_email_address, customer_contact_number) VALUES ('张三', 'zhangsan@example.com', '1234567890')",""
"将产品 ID 为 1 的产品与供应商 ID 为 2 的供应商关联起来，供货价格为 100 元，供货周期为 7 天","2","['insert', 'join']","['Products', 'ProductSupplierMapping']","INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES (1, 2, 100, 7)"," SELECT * FROM hive.testpzy.productsuppliermapping WHERE product_id = 1 AND supplier_id = 2 AND supply_price = 100.00 AND supply_lead_time_days = 7;"
"为订单 ID 为 100 的订单添加一个商品，产品 ID 为 5，数量为 2，单价为 50 元，折扣率为 10%","2","['insert', 'join']","['Orders', 'OrderItems']","INSERT INTO OrderItems (order_id, product_id, quantity, unit_price, discount_percentage) VALUES (100, 5, 2, 50, 10)"," INSERT INTO testpzy.orderitems (order_id, product_id, quantity, unit_price, discount_percentage) VALUES (100, 5, 2, 50.00, 10.00);"
"根据产品 ID 查询库存数量，并将所有产品的总库存量统计出来","3","['insert', 'join', 'aggregate']","['Inventory', 'Products']","INSERT INTO Inventory (product_id, warehouse_location, quantity_in_stock) VALUES (1, '仓库 A', 10), (2, '仓库 B', 5)
SELECT product_id, SUM(quantity_in_stock) AS total_inventory FROM Inventory GROUP BY product_id"," SELECT SUM(i.quantity_in_stock) AS total_quantity FROM hive.testpzy.inventory i;"
"根据产品 ID 查询售后服务申请数量，并按状态分组统计","3","['insert', 'join', 'aggregate']","['AfterSalesServiceRequests', 'Orders']","INSERT INTO AfterSalesServiceRequests (order_id, product_id, request_date) VALUES (10, 1, '2023-10-26'), (11, 2, '2023-10-27')
SELECT product_id, COUNT(request_id) AS request_count, resolution_status FROM AfterSalesServiceRequests JOIN Orders ON AfterSalesServiceRequests.order_id = Orders.order_id GROUP BY product_id, resolution_status"," SELECT a.product_id, a.resolution_status, COUNT(*) AS count FROM testpzy.AfterSalesServiceRequests a GROUP BY a.product_id, a.resolution_status ORDER BY a.product_id, a.resolution_status;"
"添加一个新客户","1","['insert']","['Customers']","INSERT INTO Customers (customer_id, customer_full_name, customer_email_address, customer_contact_number, customer_shipping_address, customer_registered_date) VALUES (101, 'John Doe', 'john.doe@example.com', '555-123-4567', '123 Main Street', '2023-10-26')"," SELECT 'INSERT INTO hive.testpzy.customers (customer_id, customer_full_name, customer_email_address, customer_contact_number, customer_shipping_address, customer_registered_date) VALUES (' || CAST(LAST_INSERT_ID() AS VARCHAR) || ', ' || 'John' || ', ' || 'john@example.com' || ', ' || '1234567890' || ', ' || 'No 1, Test Road' || ', ' || CURRENT_DATE);' AS insert_statement;"
"将产品 ID 为 10 的产品与供应商 ID 为 50 的供应商关联","2","['insert', 'join']","['Products', 'ProductSupplierMapping']","INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES (10, 50, 100.00, 7) ON DUPLICATE KEY UPDATE supply_price = 100.00, supply_lead_time_days = 7"," SELECT * FROM testpzy.productsuppliermapping WHERE product_id = 10 AND supplier_id = 50;"
"为订单 ID 为 201 的订单添加一项产品，产品 ID 为 5","2","['insert', 'select']","['Orders', 'OrderItems']","INSERT INTO OrderItems (order_id, product_id, quantity, unit_price, discount_percentage) VALUES (201, 5, 1, 50.00, 0.00) SELECT * FROM OrderItems WHERE order_id = 201",""
"更新产品 ID 为 15 的库存数量，同时将产品的仓库位置更改为 'Warehouse B'","3","['insert', 'update', 'join']","['Inventory', 'Products']","UPDATE Inventory SET quantity_in_stock = quantity_in_stock + 2 WHERE product_id = 15 JOIN Products ON Inventory.product_id = Products.product_id AND Products.product_id = 15 UPDATE Inventory SET warehouse_location = 'Warehouse B' WHERE product_id = 15"," SELECT * FROM hive.testpzy.inventory i WHERE i.product_id = 15;"
"为订单 ID 为 200 的售后服务申请添加一条记录，然后删除该记录，最后查询所有售后服务申请的详细信息","3","['insert', 'delete', 'select']","['AfterSalesServiceRequests', 'Orders']","INSERT INTO AfterSalesServiceRequests (request_id, order_id, product_id, request_date, issue_description, resolution_status, resolution_date) VALUES (101, 200, 10, '2023-10-26', 'Product malfunctioning', 'Pending', NULL) DELETE FROM AfterSalesServiceRequests WHERE request_id = 101 SELECT * FROM AfterSalesServiceRequests"," INSERT INTO testpzy.AfterSalesServiceRequests (order_id, product_id, request_date, issue_description, resolution_status, resolution_date) VALUES (200, 15543798, '2020-06-22', 'The product is broken', 'resolved', '2020-06-22'); SELECT * FROM testpzy.AfterSalesServiceRequests; DELETE FROM testpzy.AfterSalesServiceRequests WHERE order_id = 200;"
"插入一个新的客户","1","['insert']","['Customers']","INSERT INTO Customers (customer_id, customer_full_name, customer_email_address, customer_contact_number, customer_shipping_address, customer_registered_date) VALUES (101, 'John Doe', 'john.doe@example.com', '123-456-7890', '123 Main Street', '2023-10-26')"," INSERT INTO testpzy.Customers (customer_id, customer_full_name, customer_email_address, customer_contact_number, customer_shipping_address) VALUES (707070, 'John', 'john@testpzy.com', '1234567890', 'Shanghai');"
"为产品插入新的供应商信息","2","['insert', 'join']","['Products', 'ProductSupplierMapping']","INSERT INTO ProductSupplierMapping (product_id, supplier_id, supply_price, supply_lead_time_days) VALUES (10, 5, 100.00, 7)  FROM Products JOIN Suppliers ON Products.product_id = ProductSupplierMapping.product_id"," INSERT INTO testpzy.productsuppliermapping (product_id, supplier_id, supply_price, supply_lead_time_days) SELECT p.product_id, s.supplier_id, s.supply_price, s.supply_lead_time_days FROM testpzy.products p JOIN sourcing s ON p.product_name = s.product_name;"
"更新订单中的商品数量和折扣率","2","['insert', 'update']","['Orders', 'OrderItems']","UPDATE OrderItems SET quantity = quantity + 1 WHERE order_id = 5 AND product_id = 2; UPDATE Orders SET order_total_amount = (SELECT SUM(unit_price * quantity) FROM OrderItems WHERE order_id = 5) WHERE order_id = 5"," SELECT oi.order_item_id, oi.quantity, oi.discount_percentage FROM hive.testpzy.orderitems AS oi;"
"删除特定订单中的所有商品并更新客户的订单数量","3","['insert', 'delete']","['Customers', 'Orders', 'OrderItems']","DELETE FROM OrderItems WHERE order_id = 10; UPDATE Customers SET total_orders = (SELECT COUNT(*) FROM Orders WHERE customer_id = 1) WHERE customer_id = 1"," SELECT * FROM hive.testpzy.orders o WHERE o.order_id = 757071;"
"查询库存充足的产品，并按产品规格分组统计数量","3","['insert', 'select', 'aggregate']","['Products', 'ProductSpecifications', 'Inventory']","INSERT INTO Inventory (inventory_id, product_id, warehouse_location, quantity_in_stock, last_restock_date, reorder_threshold) VALUES (101, 1, 'Warehouse A', 50, '2023-10-26', 20); SELECT p.product_name, COUNT(i.product_id) AS product_count FROM Products p JOIN ProductSpecifications ps ON p.product_id = ps.product_id JOIN Inventory i ON p.product_id = i.product_id GROUP BY p.product_name HAVING quantity_in_stock >= 20"," SELECT p.product_name, ps.processor_model, SUM(i.quantity_in_stock) AS total_quantity FROM hive.testpzy.products p JOIN testpzy.ProductSpecifications ps ON CAST(p.product_id AS varchar) = CAST(ps.product_id AS varchar) JOIN testpzy.Inventory i ON CAST(i.product_id AS varchar) = CAST(p.product_id AS varchar) WHERE CAST(p.product_id AS integer) > 100 GROUP BY p.product_name, ps.processor_model HAVING SUM(i.quantity_in_stock) > 5 ORDER BY total_quantity DESC NULLS LAST;"
"删除客户姓名为 ‘张三’ 的记录","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_full_name = '张三'"," SELECT c.customer_id, c.customer_full_name, c.customer_email_address, c.customer_contact_number, c.customer_shipping_address, c.customer_registered_date FROM hive.testpzy.customers c WHERE c.customer_full_name ilike '%张三%' DELETE FROM c WHERE c.customer_full_name = '张三'"
"删除订单ID为100的全部订单信息及相关商品明细","2","['delete']","['Orders', 'OrderItems']","DELETE FROM OrderItems WHERE order_id = 100; DELETE FROM Orders WHERE order_id = 100;"," SELECT o.order_id, oi.order_item_id FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id WHERE o.order_id = 100;"
"删除产品名称为 ‘笔记本电脑’ 的所有相关供货信息","2","['delete']","['Products', 'ProductSupplierMapping']","DELETE FROM ProductSupplierMapping WHERE product_id IN (SELECT product_id FROM Products WHERE product_name = '笔记本电脑'); DELETE FROM Products WHERE product_name = '笔记本电脑';"," SELECT p.product_name, ps.supplier_id, ps.supply_price, ps.supply_lead_time_days FROM testpzy.ProductSupplierMapping ps JOIN testpzy.products p ON ps.product_id = p.product_id WHERE p.product_name ilike '%笔记本电脑%'"
"删除所有未发货订单中产品的库存信息并同时删除该订单及其商品明细记录","3","['delete']","['Orders', 'OrderItems', 'Inventory']","DELETE FROM Inventory WHERE product_id IN (SELECT oi.product_id FROM OrderItems oi JOIN Orders o ON oi.order_id = o.order_id WHERE o.order_status != '已发货'); DELETE FROM OrderItems WHERE order_id IN (SELECT oi.order_id FROM OrderItems oi JOIN Orders o ON oi.order_id = o.order_id WHERE o.order_status != '已发货'); DELETE FROM Orders WHERE order_status != '已发货';",""
"删除所有售后服务申请记录，以及该售后服务的关联订单信息","3","['delete']","['AfterSalesServiceRequests', 'Orders']","DELETE FROM AfterSalesServiceRequests; DELETE FROM Orders WHERE order_id IN (SELECT order_id FROM AfterSalesServiceRequests);"," SELECT * FROM testpzy.AfterSalesServiceRequests r JOIN hive.testpzy.orders o ON r.order_id = o.order_id;"
"删除id为100的客户信息","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_id = 100"," SELECT * FROM hive.testpzy.customers c WHERE c.customer_id != 100;"
"删除所有供货价格大于500的产品供货关系","2","['delete']","['ProductSupplierMapping']","DELETE FROM ProductSupplierMapping WHERE supply_price > 500"," SELECT * FROM hive.testpzy.productsuppliermapping WHERE supply_price > 500;"
"删除所有订单状态为已取消的订单","2","['delete']","['Orders']","DELETE FROM Orders WHERE order_status = '已取消'"," SELECT * FROM hive.testpzy.orders WHERE order_status != '已取消' ;"
"删除所有售后服务申请的日期在2023年1月1日之前且产品型号为‘Model X’ 的记录","3","['delete']","['AfterSalesServiceRequests']","DELETE FROM AfterSalesServiceRequests WHERE request_date < '2023-01-01' AND product_id IN (SELECT product_id FROM Products WHERE product_name = 'Model X')"," SELECT a.request_id, a.order_id, a.product_id, a.issue_description, a.resolution_status, a.resolution_date FROM hive.testpzy.aftersalesservicerequests a WHERE a.request_date < '2023-01-01' AND a.product_id = 757071;"
"删除库存中产品数量小于等于10且重新订购阈值低于5的产品记录","3","['delete']","['Inventory']","DELETE FROM Inventory WHERE quantity_in_stock <= 10 AND reorder_threshold < 5"," SELECT i.inventory_id, i.product_id, i.warehouse_location, i.quantity_in_stock, i.last_restock_date, i.reorder_threshold FROM hive.testpzy.inventory i WHERE i.quantity_in_stock <= 10 AND i.reorder_threshold < 5;"
"删除客户表中邮箱地址为'test@example.com'的记录","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_email_address = 'test@example.com'"," SELECT 'DELETE FROM hive.testpzy.customers WHERE customer_email_address = ''test@example.com''';"
"删除订单号为1001的所有订单项","2","['delete', 'join']","['Orders', 'OrderItems']","DELETE FROM OrderItems WHERE order_id = (SELECT order_id FROM Orders WHERE order_id = 1001)"," SELECT oi.order_id, i.item_name FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id JOIN items i ON oi.product_id = i.item_code WHERE o.order_id = 1001;"
"删除所有由供应商ID为5的供应商提供的产品","2","['delete', 'join']","['Products', 'ProductSupplierMapping']","DELETE FROM Products WHERE product_id IN (SELECT product_id FROM ProductSupplierMapping WHERE supplier_id = 5)"," SELECT ""query"" FROM ""hive.testpzy.products"" p JOIN ""hive.testpzy.productsuppliermapping"" ps ON p.product_id = ps.product_id WHERE ps.supplier_id = 5;"
"删除订单中包含销售额超过1000元的商品的所有订单记录","3","['delete', 'join', 'subquery']","['Orders', 'OrderItems', 'Products']","DELETE FROM Orders WHERE order_id IN (SELECT DISTINCT o.order_id FROM Orders o JOIN OrderItems oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE oi.unit_price * oi.quantity > 1000)"," SELECT o.order_id, o.customer_id, o.order_date, o.order_total_amount, o.order_status, o.shipping_tracking_number, o.estimated_delivery_date FROM testpzy.Orders o WHERE o.order_total_amount > 1000;"
"删除库存量在过去三个月内一直低于reorder_threshold的产品记录","3","['delete', 'join', 'window']","['Inventory', 'Orders']","DELETE FROM Inventory i WHERE i.product_id IN (SELECT product_id FROM (SELECT product_id, MIN(last_restock_date) AS min_restock_date FROM Inventory GROUP BY product_id) AS subquery WHERE DATE(min_restock_date) < DATE('now', '-3 months') AND i.quantity_in_stock < i.reorder_threshold)"," SELECT i.inventory_id, i.product_id, i.warehouse_location, i.last_restock_date, i.reorder_threshold FROM testpzy.Inventory i WHERE i.quantity_in_stock < i.reorder_threshold AND i.last_restock_date >= (CURRENT_DATE - INTERVAL '3 months')"
"删除id为100的客户","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_id = 100"," SELECT DELETE FROM hive.testpzy.customers WHERE customer_id = 100;"
"删除所有订单中包含产品 id 为 5 的订单项","2","['delete', 'join']","['Orders', 'OrderItems']","DELETE FROM OrderItems WHERE product_id = 5"," SELECT oi.order_item_id, COUNT(*) FROM hive.testpzy.orderitems oi WHERE oi.product_id = 5 GROUP BY oi.order_item_id;"
"删除所有由供应商 id 为 20 的供应商供应的产品","2","['delete', 'join']","['Products', 'ProductSupplierMapping']","DELETE FROM Products WHERE product_id IN (SELECT product_id FROM ProductSupplierMapping WHERE supplier_id = 20)",""
"删除所有在过去三个月内没有销售记录的产品","3","['delete', 'join', 'aggregate']","['Orders', 'OrderItems', 'Products']","DELETE FROM Products WHERE product_id NOT IN (SELECT DISTINCT product_id FROM OrderItems WHERE order_date >= DATE('now', '-3 months'))"," SELECT p.product_name, p.product_id FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id JOIN hive.testpzy.products p ON oi.product_id = p.product_id WHERE o.order_date < CURRENT_DATE - interval '3 months' AND p.product_status != '下架' GROUP BY p.product_name, p.product_id;"
"删除所有售后服务请求，其订单的总销售额超过 1000 元","3","['delete', 'join', 'subquery']","['AfterSalesServiceRequests', 'Orders']","DELETE FROM AfterSalesServiceRequests WHERE order_id IN (SELECT order_id FROM Orders WHERE SUM(OrderItems.unit_price * OrderItems.quantity) > 1000)"," SELECT a.request_id, a.order_id, a.product_id, a.request_date, a.issue_description, a.resolution_status, a.resolution_date FROM hive.testpzy.aftersalesservicerequests a JOIN hive.testpzy.orders o ON a.order_id = o.order_id WHERE o.order_total_amount > 1000;"
"删除ID为100的客户","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_id = 100"," SELECT * FROM hive.testpzy.customers WHERE customer_id = 100;"
"删除所有订单总金额小于500元的订单及其明细","2","['delete']","['Orders', 'OrderItems']","DELETE FROM OrderItems oi JOIN Orders o ON oi.order_id = o.order_id WHERE o.order_total_amount < 500;",""
"删除由供应商ID为1的供应商提供的所有产品","2","['delete']","['ProductSupplierMapping']","DELETE FROM ProductSupplierMapping WHERE supplier_id = 1;"," DELETE FROM hive.testpzy.productsuppliermapping WHERE supplier_id = 1;"
"删除所有在2023年8月之前提交并且包含‘屏幕破裂’问题的售后服务申请的订单及其明细","3","['delete']","['Orders', 'OrderItems']","DELETE FROM OrderItems oi JOIN Orders o ON oi.order_id = o.order_id  JOIN AfterSalesServiceRequests asr ON o.order_id = asr.order_id WHERE asr.request_date < '2023-08-01' AND asr.issue_description LIKE '%屏幕破裂%';"," SELECT * FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id WHERE o.order_date < '2023-08-01' AND oi.product_name ILIKE '%屏幕破裂%'"
"删除库存量低于5台并且产品发布日期在2022年1月之前的所有产品及其对应的库存记录","3","['delete']","['Inventory', 'Products']","DELETE FROM Inventory i JOIN Products p ON i.product_id = p.product_id WHERE i.quantity_in_stock < 5 AND p.product_launch_date < '2022-01-01';"," SELECT i.inventory_id, p.product_name, p.product_launch_date FROM testpzy.Inventory AS i JOIN testpzy.Products AS p ON i.product_id = p.product_id WHERE i.quantity_in_stock < 5 AND p.product_launch_date < '2022-01-01' FOR DELETE;"
"删除客户ID为1的客户信息","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_id = 1"," SELECT DELETE FROM hive.testpzy.customers WHERE customer_id = 1;"
"删除所有订单中商品数量大于等于5的订单信息","2","['delete', 'join']","['Orders', 'OrderItems']","DELETE o FROM Orders o JOIN OrderItems oi ON o.order_id = oi.order_id WHERE oi.quantity >= 5"," SELECT o.order_id, oi.product_id, oi.quantity FROM hive.testpzy.orders AS o JOIN hive.testpzy.orderitems AS oi ON o.order_id = oi.order_id WHERE o.order_id >= 1000 AND oi.quantity >= 5;"
"删除所有由供应商ID为2的供应商供应的产品信息","2","['delete', 'join']","['Products', 'ProductSupplierMapping']","DELETE p FROM Products p JOIN ProductSupplierMapping ps ON p.product_id = ps.product_id WHERE ps.supplier_id = 2"," SELECT ""product_id"", ""product_name"", ""product_category"", ""product_description"", ""product_launch_date"", ""warranty_period_in_months"", ""product_sku_code"", ""product_status"" FROM hive.testpzy.products WHERE product_id IN (SELECT product_id FROM hive.testpzy.productsuppliermapping WHERE supplier_id = 2) AND product_id NOT IN (SELECT product_id FROM hive.testpzy.productsuppliermapping WHERE supplier_id = 1);"
"删除所有订单中商品价格高于平均商品价格的订单信息","3","['delete', 'join', 'subquery']","['Orders', 'OrderItems', 'Products']","DELETE o FROM Orders o JOIN OrderItems oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE oi.unit_price > (SELECT AVG(oi2.unit_price) FROM OrderItems oi2); "," SELECT o.order_id, oi.order_item_id, p.product_name, p.unit_price FROM testpzy.Orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE unit_price <= (SELECT AVG(unit_price) FROM products);"
"删除每个客户购买商品总数量排名前5%的客户的订单信息","3","['delete', 'join', 'window']","['Orders', 'OrderItems', 'Customers']","DELETE o FROM Orders o JOIN OrderItems oi ON o.order_id = oi.order_id JOIN Customers c ON o.customer_id = c.customer_id WHERE c.customer_id IN (SELECT customer_id FROM (SELECT customer_id, SUM(oi2.quantity) AS total_quantity FROM Orders o2 JOIN OrderItems oi2 ON o2.order_id = oi2.order_id GROUP BY customer_id ORDER BY total_quantity DESC) WHERE ROWNUM <= 5) "," SELECT c.customer_full_name, COUNT(o.order_id) AS total_orders FROM testpzy.customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_full_name ORDER BY total_orders DESC NULLS LAST;"
"删除id为100的客户","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_id = 100"," SELECT 'DELETE FROM hive.testpzy.customers WHERE customer_id = 100';"
"删除所有订单号为500的订单及其关联的商品","2","['delete']","['Orders', 'OrderItems']","DELETE FROM OrderItems WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id = 500) DELETE FROM Orders WHERE order_id = 500"," SELECT oi.order_item_id, i.item_name, o.order_id, oi.quantity, u.user_email FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id JOIN inventory i ON i.item_id = oi.product_id JOIN users u ON u.user_id = o.customer_id;"
"删除所有与供应商id为10的商品关系","2","['delete']","['ProductSupplierMapping']","DELETE FROM ProductSupplierMapping WHERE supplier_id = 10"," SELECT * FROM hive.testpzy.productsuppliermapping p WHERE p.supplier_id = 10;"
"删除所有订单号大于1000且产品库存小于5的订单及其关联的商品和库存记录","3","['delete']","['Orders', 'OrderItems', 'Inventory']","DELETE FROM OrderItems oi JOIN Orders o ON oi.order_id = o.order_id WHERE o.order_id > 1000 AND oi.product_id IN (SELECT product_id FROM Inventory WHERE quantity_in_stock < 5) DELETE FROM Orders WHERE order_id IN (SELECT order_id FROM OrderItems) DELETE FROM Inventory WHERE product_id IN (SELECT product_id FROM OrderItems)","---------------------"
"删除所有产品型号为 'P123' 的产品及其对应配置信息","3","['delete']","['Products', 'ProductSpecifications']","DELETE FROM ProductSpecifications WHERE product_id IN (SELECT product_id FROM Products WHERE product_name = 'P123') DELETE FROM Products WHERE product_name = 'P123'"," DELETE FROM testpzy.products WHERE product_id = 'P123';"
"删除客户姓名是“张三”的记录","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_full_name = '张三'"," SELECT c.customer_full_name FROM hive.testpzy.customers c WHERE c.customer_full_name ILIKE '%张三%' DELETE c;"
"删除订单号为“1001”的所有订单和订单项","2","['delete']","['Orders', 'OrderItems']","DELETE FROM OrderItems WHERE order_id = '1001' DELETE FROM Orders WHERE order_id = '1001'",""
"删除所有由供应商ID为“2”提供的产品的记录","2","['delete']","['ProductSupplierMapping']","DELETE FROM ProductSupplierMapping WHERE supplier_id = '2'"," SELECT 'DELETE FROM hive.testpzy.productsuppliermapping WHERE supplier_id = 2;'"
"删除所有售后服务申请记录，申请日期早于‘2023-01-01’且产品ID在“Products”表中未找到的记录","3","['delete']","['AfterSalesServiceRequests']","DELETE FROM AfterSalesServiceRequests WHERE request_date < '2023-01-01' AND product_id NOT IN (SELECT product_id FROM Products)"," SELECT ""query"" FROM ""hive.testpzy.aftersalesservicerequests"" AS a LEFT JOIN ""Products"" AS p ON a.""product_id"" = p.product_id WHERE a.""request_id"" IS NULL AND (a.""request_date"", a.""product_id"") NOT IN (SELECT ""request_date"", ""product_id"" FROM ""hive.testpzy.aftersalesservicerequests"" WHERE ""request_date"" < '2023-01-01')"
"删除库存量小于‘5’且最后补货日期早于‘2023-01-01’的记录","3","['delete']","['Inventory']","DELETE FROM Inventory WHERE quantity_in_stock < 5 AND last_restock_date < '2023-01-01'"," SELECT inventory_id, product_id, warehouse_location, last_restock_date FROM hive.testpzy.inventory WHERE quantity_in_stock < 5 AND last_restock_date < '2023-01-01'"
"删除所有邮箱地址包含'example.com' 的客户","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_email_address LIKE '%example.com%'"," SELECT COUNT(*) FROM testpzy.Customers c WHERE c.customer_email_address ilike '%example.com%' ;"
"删除所有订单状态为'已取消'，并且由供应商id为10 的产品供货的订单记录及相关映射信息","2","['delete']","['Orders', 'ProductSupplierMapping']","DELETE FROM Orders WHERE order_status = '已取消' AND EXISTS (SELECT 1 FROM ProductSupplierMapping WHERE Products.product_id = ProductSupplierMapping.product_id AND ProductSupplierMapping.supplier_id = 10); DELETE FROM ProductSupplierMapping WHERE product_id IN (SELECT product_id FROM Orders WHERE order_status = '已取消');"," SELECT 'DELETE FROM testpzy.orders WHERE order_status = ''已取消'' AND customer_id IN (SELECT customer_id FROM testpzy.ProductSupplierMapping WHERE supplier_id = 10);'"
"删除库存数量为0的所有产品，以及与这些产品的订单项信息","2","['delete']","['Inventory', 'Orders']","DELETE FROM Inventory WHERE quantity_in_stock = 0; DELETE FROM OrderItems WHERE product_id IN (SELECT product_id FROM Inventory WHERE quantity_in_stock = 0);"," SELECT 1;"
"删除所有售后服务请求中，产品型号为'ProductX' 的记录，同时删除相关订单和产品的关联信息，保证数据一致性","3","['delete']","['AfterSalesServiceRequests', 'Orders', 'Products']","DELETE FROM AfterSalesServiceRequests WHERE product_id IN (SELECT product_id FROM Products WHERE product_name = 'ProductX'); DELETE FROM Orders WHERE order_id IN (SELECT order_id FROM AfterSalesServiceRequests WHERE product_id IN (SELECT product_id FROM Products WHERE product_name = 'ProductX')); DELETE FROM Products WHERE product_name = 'ProductX';"," SELECT 'AfterSalesServiceRequests', COUNT(*) FROM hive.testpzy.aftersalesservicerequests WHERE product_id IN (SELECT product_id FROM hive.testpzy.products WHERE product_name = 'ProductX') UNION ALL SELECT 'Orders', COUNT(*) FROM hive.testpzy.orders WHERE order_id IN (SELECT order_id FROM hive.testpzy.aftersalesservicerequests WHERE product_id IN (SELECT product_id FROM hive.testpzy.products WHERE product_name = 'ProductX')) UNION ALL SELECT 'Products', COUNT(*) FROM hive.testpzy.products WHERE product_status = '删除'"
"删除所有客户未完成的订单，以及相关产品供应信息和客户自身信息，但保留已完成订单的信息","3","['delete']","['Customers', 'Orders', 'ProductSupplierMapping']","DELETE FROM Customers WHERE customer_id IN (SELECT DISTINCT customer_id FROM Orders WHERE order_status = '未完成'); DELETE FROM OrderItems WHERE order_id IN (SELECT order_id FROM Orders WHERE order_status = '未完成'); DELETE FROM Orders WHERE order_status = '未完成'; DELETE FROM ProductSupplierMapping WHERE product_id IN (SELECT product_id FROM OrderItems WHERE order_id IN (SELECT order_id FROM Orders WHERE order_status = '未完成'));"," SELECT o.order_id, c.customer_id, ps.mapping_id FROM hive.testpzy.orders o JOIN hive.testpzy.customers c ON o.customer_id = c.customer_id AND o.order_id = c.customer_id JOIN hive.testpzy.productsuppliermapping ps ON ps.supply_price IS NOT NULL AND ps.supply_lead_time_days IS NOT NULL;"
"删除顾客John Doe的所有信息","1","['delete']","['Customers']","DELETE FROM Customers WHERE customer_full_name = 'John Doe'"," SELECT * FROM testpzy.customers WHERE customer_full_name ilike '%John%Doe%' DELETE;"
"删除所有订单日期在2023-01-01之前以及对应订单商品的明细信息","2","['delete']","['Orders', 'OrderItems']","DELETE FROM OrderItems WHERE order_id IN (SELECT order_id FROM Orders WHERE order_date < '2023-01-01') DELETE FROM Orders WHERE order_date < '2023-01-01'"," SELECT p.order_id, i.order_item_id FROM testpzy.Orders o JOIN testpzy.OrderItems i ON o.order_id = i.order_id JOIN (SELECT order_id FROM testpzy.Orders WHERE order_date < '2023-01-01') p ON o.order_id = p.order_id;"
"删除所有产品类别为'笔记本电脑'并且供货价格大于500美元的产品信息以及对应的供应商关系信息","2","['delete']","['Products', 'ProductSupplierMapping']","DELETE FROM ProductSupplierMapping WHERE product_id IN (SELECT product_id FROM Products WHERE product_category = '笔记本电脑' AND supply_price > 500) DELETE FROM Products WHERE product_category = '笔记本电脑' AND supply_price > 500"," SELECT ""presto-cli"" ""-e"" ""DELETE FROM testpzy.products p WHERE p.product_name = '笔记本电脑' AND EXTRACT(epoch FROM CURRENT_TIMESTAMP) - EXTRACT(epoch FROM p.product_launch_date::TIMESTAMP) < 30 * 24 * 60 * 60; DELETE FROM testpzy.productsuppliermapping m WHERE m.product_id = (SELECT p.product_id FROM testpzy.products p WHERE p.product_name = '笔记本电脑' AND EXTRACT(epoch FROM CURRENT_TIMESTAMP) - EXTRACT(epoch FROM p.product_launch_date::TIMESTAMP) < 30 * 24 * 60 * 60);"""
"删除所有顾客年龄大于25岁并且购买了笔记本电脑且订单金额超过1000美元的订单信息以及对应的商品明细和产品信息","3","['delete']","['Orders', 'OrderItems', 'Products', 'Customers']","DELETE o FROM Orders o JOIN OrderItems oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id JOIN Customers c ON o.customer_id = c.customer_id WHERE c.customer_age > 25 AND p.product_category = '笔记本电脑' AND o.order_total_amount > 1000 DELETE FROM OrderItems WHERE order_id IN (SELECT order_id FROM Orders WHERE customer_age > 25 AND product_category = '笔记本电脑' AND order_total_amount > 1000) DELETE FROM Products WHERE product_id IN (SELECT product_id FROM OrderItems WHERE order_id IN (SELECT order_id FROM Orders WHERE customer_age > 25 AND product_category = '笔记本电脑' AND order_total_amount > 1000))"," SELECT o.order_id, c.customer_full_name, p.product_name, i.quantity, i.unit_price, oi.order_item_id FROM testpzy.orders o JOIN customers c ON o.customer_id = c.customer_id JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE CAST(c.customer_full_name AS integer) > 25 AND p.product_category = 'laptop' AND o.order_total_amount > 1000;"
"删除库存数量小于10且产品型号为'X86-4G'的产品信息以及对应的库存记录","3","['delete']","['Inventory', 'Products']","DELETE i FROM Inventory i JOIN Products p ON i.product_id = p.product_id WHERE i.quantity_in_stock < 10 AND p.product_name = 'X86-4G' DELETE FROM Products WHERE product_name = 'X86-4G'"," SELECT p.product_name, i.quantity_in_stock FROM testpzy.Products p JOIN testpzy.Inventory i ON CAST(p.product_id AS integer) = i.product_id WHERE i.quantity_in_stock < 10 AND p.product_sku_code = 'X86-4G';"
"修改客户姓名为 'John Doe' 的联系号码为 '123-456-7890' ","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '123-456-7890' WHERE customer_full_name = 'John Doe'"," SELECT c.customer_contact_number FROM testpzy.Customers c WHERE c.customer_full_name ilike '%John%Doe%'"
"修改所有供应商价格为产品价格的两倍","2","['update', 'join']","['Products', 'ProductSupplierMapping']","UPDATE ProductSupplierMapping SET supply_price = Products.product_launch_date * 2 FROM Products WHERE Products.product_id = ProductSupplierMapping.product_id",""
"根据产品的型号，调整所有订单项的价格，增加10% ，但如果订单项数量大于5个，价格则保持不变","3","['update', 'join', 'aggregate']","['Orders', 'OrderItems', 'Products']","UPDATE OrderItems SET unit_price = (SELECT product_launch_date * 1.1 FROM Products WHERE product_id = OrderItems.product_id) WHERE OrderItems.quantity <= 5  ORDER BY Orders.order_date;"," SELECT oi.order_item_id, CASE WHEN oi.quantity <= 5 THEN p.unit_price * 1.10 ELSE p.unit_price END AS price FROM hive.testpzy.orderitems oi JOIN hive.testpzy.products p ON oi.product_id = p.product_id;"
"删除与供应商id为1的供应商有关的产品信息","2","['delete', 'join']","['Products', 'ProductSupplierMapping']","DELETE FROM ProductSupplierMapping WHERE supplier_id = 1;"," SELECT p.product_id, p.product_name, p.product_category, p.product_description, p.product_launch_date, p.warranty_period_in_months, p.product_sku_code, p.product_status FROM hive.testpzy.products p JOIN testpzy.ProductSupplierMapping m ON p.product_id = m.product_id WHERE m.supplier_id = 1;"
"删除所有订单项，其所属产品在库存数量小于5的情况下","3","['delete', 'join', 'aggregate']","['Orders', 'OrderItems', 'Products']","DELETE FROM OrderItems oi WHERE EXISTS (SELECT 1 FROM Inventory i WHERE i.product_id = oi.product_id AND i.quantity_in_stock < 5);"," SELECT oi.order_item_id FROM testpzy.orderitems oi JOIN testpzy.products p ON oi.product_id = p.product_id WHERE p.product_stock_quantity < 5;"
"修改客户名为张三的联系电话为13800138000","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '13800138000' WHERE customer_full_name = '张三'"," SELECT c.customer_id, c.customer_full_name, c.customer_contact_number, c.customer_shipping_address FROM hive.testpzy.customers c WHERE c.customer_full_name = '张三' AND c.customer_contact_number = '13800138000';"
"将所有产品供应价格提高10%","2","['update', 'join']","['Products', 'ProductSupplierMapping']","UPDATE Products SET product_price = Products.product_price * 1.10 FROM ProductSupplierMapping WHERE Products.product_id = ProductSupplierMapping.product_id"," SELECT ps.product_id, CAST(ps.supply_price AS decimal) * 1.1 AS new_supply_price FROM testpzy.ProductSupplierMapping ps;"
"将所有订单中的商品数量减去1","2","['update', 'join']","['Orders', 'OrderItems']","UPDATE OrderItems SET quantity = quantity - 1 FROM Orders WHERE Orders.order_id = OrderItems.order_id"," SELECT oi.order_item_id, oi.order_id, oi.product_id, oi.quantity - 1 AS new_quantity FROM hive.testpzy.orderitems oi;"
"如果某个产品在库存数量低于50件，则将该产品的售价降低10%","3","['update', 'join', 'aggregate']","['Products', 'ProductSpecifications', 'Inventory']","UPDATE Products SET product_price = Products.product_price * 0.9 WHERE Products.product_id IN (SELECT ProductSpecifications.product_id FROM ProductSpecifications JOIN Inventory ON ProductSpecifications.product_id = Inventory.product_id WHERE Inventory.quantity_in_stock < 50)"," SELECT i.inventory_id, p.product_name, p.product_price, s.supplier_name FROM testpzy.Inventory AS i JOIN testpzy.Products AS p ON i.product_id = p.product_id JOIN testpzy.Suppliers AS s ON p.supplier_id = s.supplier_id WHERE i.quantity_in_stock < 50 AND p.product_price > 1000;"
"将所有在过去一个月内有订单的客户的注册日期设置为今天","3","['update', 'join', 'subquery']","['Customers', 'Orders']","UPDATE Customers SET customer_registered_date = CURRENT_DATE WHERE customer_id IN (SELECT DISTINCT customer_id FROM Orders WHERE order_date >= DATE('now', '-1 month'))"," SELECT c.customer_registered_date FROM testpzy.customers c JOIN testpzy.orders o ON c.customer_id = o.customer_id WHERE o.order_date > CURRENT_DATE - INTERVAL '1 month' ORDER BY c.customer_registered_date NULLS LAST;"
"将客户姓名‘张三’的联系电话修改为 ‘13800138000’","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '13800138000' WHERE customer_full_name = '张三'"," SELECT c.customer_id, c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c WHERE c.customer_full_name ILIKE '%张三%' LIMIT 1;"
"修改产品‘笔记本电脑A’的供货价格为1000元","2","['update']","['Products', 'ProductSupplierMapping']","UPDATE Products SET product_price = 1000 WHERE product_name = '笔记本电脑A' UPDATE ProductSupplierMapping SET supply_price = 1000 WHERE product_id = (SELECT product_id FROM Products WHERE product_name = '笔记本电脑A')"," SELECT p.product_id, p.product_name, ps.supply_price FROM testpzy.products p JOIN testpzy.ProductSupplierMapping ps ON p.product_id = ps.product_id WHERE p.product_name ilike '%笔记本电脑A%'"
"将订单‘1001’中商品‘手机B’的折扣百分比从10%修改为20%","2","['update']","['Orders', 'OrderItems']","UPDATE OrderItems SET discount_percentage = 20 WHERE order_id = '1001' AND product_name = '手机B'"," SELECT oi.discount_percentage FROM testpzy.orderitems oi WHERE oi.order_id = 1001 AND oi.product_id = 590776;"
"修改‘游戏主机C’的CPU型号为‘酷睿i9’，并将库存数量增加50个","3","['update']","['Products', 'ProductSpecifications', 'Inventory']","UPDATE Products SET product_description = '游戏主机C更新' WHERE product_name = '游戏主机C' UPDATE ProductSpecifications SET processor_model = '酷睿i9' WHERE product_id = (SELECT product_id FROM Products WHERE product_name = '游戏主机C') UPDATE Inventory SET quantity_in_stock = quantity_in_stock + 50 WHERE product_id = (SELECT product_id FROM Products WHERE product_name = '游戏主机C')"," SELECT product_id, processor_model, ram_capacity_in_gb, storage_type, storage_capacity_in_gb, graphics_card_model, screen_size_in_inches, battery_life_estimation_hours, has_touchscreen, maximum_wireless_connectivity_standard_supported, number_of_usb_type_c_ports_supported_by_the_motherboard FROM hive.testpzy.productspecifications WHERE product_id = 657071;"
"将供应商‘北京公司’的联系邮箱更改为‘beijing.company@example.com’，并修改该供应商的供货周期为5天","3","['update']","['Suppliers', 'ProductSupplierMapping']","UPDATE Suppliers SET supplier_contact_email = 'beijing.company@example.com' WHERE supplier_name = '北京公司' UPDATE ProductSupplierMapping SET supply_lead_time_days = 5 WHERE supplier_id = (SELECT supplier_id FROM Suppliers WHERE supplier_name = '北京公司')"," SELECT s.supplier_contact_email FROM testpzy.Suppliers s WHERE s.supplier_country ILIKE '%北京%' AND s.supplier_id IN (SELECT m.supplier_id FROM testpzy.ProductSupplierMapping m GROUP BY m.supplier_id HAVING MAX(m.supply_lead_time_days) = 7);"
"修改客户姓名为 '李四'","1","['update']","['Customers']","UPDATE Customers SET customer_full_name = '李四' WHERE customer_id = 1"," SELECT c.customer_full_name FROM hive.testpzy.customers c WHERE c.customer_full_name='李四';"
"将产品 '笔记本电脑' 的供货价格修改为 800 元","2","['update', 'join']","['Products', 'ProductSupplierMapping']","UPDATE Products SET product_price = 800 WHERE product_id IN (SELECT product_id FROM ProductSupplierMapping WHERE product_name = '笔记本电脑')"," SELECT ps.supply_price, p.product_name FROM hive.testpzy.products p JOIN hive.testpzy.productsuppliermapping ps ON p.product_id = ps.product_id WHERE p.product_name ilike '%笔记本电脑%';"
"将订单号为 1000 的商品的折扣百分比设置为 10%","2","['update', 'join']","['Orders', 'OrderItems']","UPDATE OrderItems SET discount_percentage = 10 WHERE order_id IN (SELECT order_id FROM Orders WHERE order_id = 1000)"," SELECT ot.order_total_amount * (ot.discount_percentage / 100) AS discounted_price FROM testpzy.Orders ot WHERE ot.order_id = 1000;"
"将库存中 '笔记本电脑' 的数量减少 5 台，并更新其屏幕尺寸为 14 英寸","3","['update', 'join', 'aggregate']","['Products', 'ProductSpecifications', 'Inventory']","UPDATE Inventory SET quantity_in_stock = quantity_in_stock - 5 WHERE product_id IN (SELECT product_id FROM Products WHERE product_name = '笔记本电脑') AND warehouse_location = '总部仓库' 
 UPDATE ProductSpecifications SET screen_size_in_inches = 14 WHERE product_id IN (SELECT product_id FROM Products WHERE product_name = '笔记本电脑')"," SELECT i.inventory_id, p.product_name, ps.processor_model, s.storage_type, g.graphics_card_model, d.battery_life_estimation_hours, t.has_touchscreen, m.maximum_wireless_connectivity_standard_supported, po.number_of_usb_type_c_ports_supported_by_the_motherboard FROM hive.testpzy.inventory i JOIN hive.testpzy.products p ON i.product_id = p.product_id JOIN hive.testpzy.productspecifications ps ON ps.product_id = p.product_id LEFT JOIN hive.storage s ON s.storage_type = 'HDD' AND s.capacity >= 500000000000 WHERE product_category ilike '%笔记本电脑%' SET screen_size_in_inches = 14.0;"
"将所有订单中客户姓名为 '张三' 的订单状态修改为 '已发货'","3","['update', 'join', 'subquery']","['Orders', 'OrderItems', 'Customers']","UPDATE Orders SET order_status = '已发货' WHERE customer_id IN (SELECT customer_id FROM Customers WHERE customer_full_name = '张三') AND order_id IN (SELECT order_id FROM OrderItems GROUP BY order_id)"," SELECT o.order_id, o.order_date, o.order_total_amount, o.order_status, c.customer_full_name FROM testpzy.orders o JOIN testpzy.customers c ON o.customer_id = c.customer_id WHERE c.customer_full_name ilike '%张三%' ORDER BY o.order_date NULLS LAST;"
"修改客户张三的联系电话为13800138000","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '13800138000' WHERE customer_full_name = '张三'"," SELECT c.customer_contact_number FROM hive.testpzy.customers c WHERE c.customer_full_name = '张三';"
"将所有笔记本电脑的供货价格增加10%","2","['update']","['Products', 'ProductSupplierMapping']","UPDATE Products SET product_status = 'Out of Stock' WHERE product_category = 'Laptop'; UPDATE ProductSupplierMapping SET supply_price = supply_price * 1.1 WHERE product_id IN (SELECT product_id FROM Products WHERE product_category = 'Laptop')"," SELECT p.product_id, ps.supplier_id, ps.supply_price AS supply_price FROM testpzy.products p JOIN testpzy.productsuppliermapping ps ON p.product_id = ps.product_id WHERE p.product_category = '笔记本电脑';"
"将所有订单中的商品价格减去5%","2","['update']","['Orders', 'OrderItems']","UPDATE OrderItems SET unit_price = unit_price * 0.95 WHERE order_id IN (SELECT order_id FROM Orders)"," SELECT oi.order_item_id, (oi.unit_price * 0.95) AS discounted_unit_price FROM hive.testpzy.orderitems oi;"
"如果一款产品的屏幕尺寸大于15英寸，则增加库存数量，否则减少库存数量","3","['update']","['Inventory', 'ProductSpecifications']","UPDATE Inventory SET quantity_in_stock = CASE WHEN ProductSpecifications.screen_size_in_inches > 15 THEN quantity_in_stock + 10 ELSE quantity_in_stock - 5 END WHERE Inventory.product_id = ProductSpecifications.product_id"," SELECT i.inventory_id, ps.screen_size_in_inches FROM testpzy.Inventory AS i JOIN testpzy.ProductSpecifications AS ps ON i.product_id = ps.product_id WHERE ps.screen_size_in_inches > 15;"
"对于所有已解决的售后服务申请，将订单状态更新为‘已完成’","3","['update']","['AfterSalesServiceRequests', 'Orders']","UPDATE Orders SET order_status = 'Completed' WHERE order_id IN (SELECT DISTINCT order_id FROM AfterSalesServiceRequests WHERE resolution_status = 'Resolved')"," SELECT a.order_id, a.customer_id, o.order_date, o.order_total_amount, o.order_status, s.issue_description, s.resolution_status, s.resolution_date FROM testpzy.aftersalesservicerequests AS s JOIN testpzy.orders AS a ON s.order_id = a.order_id JOIN orders AS o ON a.order_id = o.order_id WHERE s.resolution_status = '已解决' ORDER BY a.order_id NULLS LAST;"
"修改客户张三的联系电话为13800001234","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '13800001234' WHERE customer_full_name = '张三'"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c WHERE c.customer_full_name ilike '%张三%' LIMIT 1;"
"更新所有由供应商ABC供应的产品的供货价格为100元","2","['update', 'join']","['Products', 'ProductSupplierMapping']","UPDATE Products SET supply_price = 100 WHERE product_id IN (SELECT product_id FROM ProductSupplierMapping WHERE supplier_id = (SELECT supplier_id FROM Suppliers WHERE supplier_name = 'ABC'))"," SELECT ps.supply_price FROM hive.testpzy.productsuppliermapping ps JOIN hive.testpzy.products p ON ps.product_id = p.product_id WHERE p.product_name ilike '%ABC%' AND ps.supplier_id = 100;"
"将所有订单商品的折扣百分比增加1%","2","['update', 'join']","['Orders', 'OrderItems']","UPDATE OrderItems SET discount_percentage = discount_percentage + 0.01 WHERE order_id IN (SELECT order_id FROM Orders)"," SELECT oi.order_item_id, oi.product_id, oi.quantity, oi.unit_price * (1 + CAST(oi.discount_percentage AS decimal) / 100) AS discounted_unit_price FROM hive.testpzy.orderitems oi;"
"将所有来自供应商XYZ的产品订单的总金额减去10%，并将该金额更新到Orders表中","3","['update', 'join', 'aggregate']","['Orders', 'Products', 'Suppliers']","UPDATE Orders SET order_total_amount = (order_total_amount * 0.9) WHERE order_id IN (SELECT order_id FROM OrderItems JOIN Products ON OrderItems.product_id = Products.product_id JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id JOIN Suppliers ON ProductSupplierMapping.supplier_id = Suppliers.supplier_id WHERE Suppliers.supplier_name = 'XYZ')"," SELECT o.order_id, CAST(o.order_total_amount AS decimal) * 0.9 AS updated_order_total_amount FROM hive.testpzy.orders o JOIN hive.testpzy.products p ON o.customer_id = p.product_sku_code JOIN hive.testpzy.suppliers s ON p.product_category = s.supplier_name WHERE s.supplier_name = 'XYZ' ORDER BY o.order_id NULLS LAST;"
"将所有产品库存数量大于50的产品的更新其reorder_threshold设置为100","3","['update', 'join', 'subquery']","['Inventory', 'Products']","UPDATE Inventory SET reorder_threshold = 100 WHERE product_id IN (SELECT product_id FROM Products WHERE quantity_in_stock > 50)"," SELECT i.inventory_id, i.product_id, i.warehouse_location, CASE WHEN i.quantity_in_stock > 50 THEN 100 ELSE i.reorder_threshold END AS reorder_threshold FROM testpzy.Inventory i WHERE i.quantity_in_stock > 50;"
"修改客户John Doe的联系电话为123-456-7890","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '123-456-7890' WHERE customer_full_name = 'John Doe'"," SELECT c.customer_contact_number FROM hive.testpzy.customers c WHERE c.customer_full_name ilike '%John%Doe%' UNION ALL UPDATE hive.testpzy.customers SET c.customer_contact_number = '123-456-7890' WHERE c.customer_full_name ilike '%John%Doe%';"
"将所有供应商为ABC公司的产品价格提高10%","2","['update', 'join']","['Products', 'ProductSupplierMapping']","UPDATE Products SET product_price = (SELECT supply_price * 1.1 FROM ProductSupplierMapping WHERE ProductSupplierMapping.product_id = Products.product_id AND SupplierName = 'ABC Company')"," SELECT ps.product_id, ps.supplier_id, ps.supply_price * 1.1 AS supply_price_with_discount FROM testpzy.ProductSupplierMapping ps WHERE ps.supplier_id = (SELECT supplier_id FROM testpzy.Suppliers WHERE supplier_name = 'ABC公司') ORDER BY ps.product_id NULLS LAST;"
"如果一个订单包含笔记本电脑，则将该订单的总金额增加10%","2","['update', 'join']","['Orders', 'OrderItems']","UPDATE Orders SET order_total_amount = (SELECT SUM(unit_price * quantity) + (SELECT CASE WHEN product_category = 'Laptop' THEN 0.1 * SUM(unit_price * quantity) ELSE 0 END FROM OrderItems WHERE OrderItems.order_id = Orders.order_id) FROM OrderItems WHERE OrderItems.order_id = Orders.order_id)"," SELECT o.order_id, o.customer_id, o.order_date, (o.order_total_amount * 1.10) AS updated_order_total_amount, o.order_status, o.shipping_tracking_number, o.estimated_delivery_date FROM hive.testpzy.orders o JOIN hive.testpzy.orderitems oi ON o.order_id = oi.order_id WHERE oi.product_id = 2070 AND o.order_status = 'shipped' ORDER BY o.order_date NULLS LAST;"
"如果一个产品在过去三个月内销售数量超过10个，则将该产品的库存数量减少5%","3","['update', 'join', 'aggregate']","['Products', 'ProductSpecifications', 'Orders', 'OrderItems']","UPDATE Products SET product_stock = (SELECT product_stock * 0.95 FROM Products WHERE Product.product_id IN (SELECT DISTINCT product_id FROM OrderItems WHERE order_date >= DATE('now', '-3 months')) AND COUNT(*) > 10) WHERE EXISTS(SELECT product_id FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id JOIN Products ON OrderItems.product_id = Products.product_id WHERE Products.product_id = Product.product_id AND order_date >= DATE('now', '-3 months') GROUP BY Products.product_id HAVING COUNT(*) > 10)"," SELECT p.product_id, COUNT(*) AS count_of_sales FROM hive.testpzy.orderitems oi JOIN hive.testpzy.products p ON oi.product_id = p.product_id WHERE oi.order_item_status not like '%returned%' AND oi.order_item_status not like '%canceled%' AND p.product_status not like '%disabled%' AND EXTRACT(MONTH FROM oi.order_date) BETWEEN 1 AND 3 AND EXTRACT(YEAR FROM oi.order_date) = EXTRACT(YEAR FROM CURRENT_DATE - INTERVAL '3 months') GROUP BY p.product_id HAVING COUNT(*) > 10;"
"如果一个客户过去的订单总金额超过前5%的客户总订单金额，则将该客户的折扣比例提高1%","3","['update', 'join', 'window']","['Customers', 'Orders', 'OrderItems']","UPDATE Customers SET customer_discount = (SELECT COALESCE(SUM(order_total_amount), 0) + 1 FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id WHERE CustomerId = Customers.customer_id AND order_date < CURRENT_DATE GROUP BY CustomerId HAVING SUM(order_total_amount) > (SELECT PERCENTILE_CONT(0.05) WITHIN GROUP (ORDER BY SUM(order_total_amount)) FROM Orders JOIN OrderItems ON Orders.order_id = OrderItems.order_id GROUP BY CustomerId))"," SELECT c.customer_id, o.order_total_amount, oi.discount_percentage FROM testpzy.Customers c JOIN testpzy.Orders o ON c.customer_id = o.customer_id JOIN testpzy.OrderItems oi ON o.order_id = oi.order_item_id WHERE o.order_total_amount > (SELECT PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY o.order_total_amount) FROM testpzy.Orders) AND oi.discount_percentage < 1;"
"修改客户张三的联系方式为 13800000000","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '13800000000' WHERE customer_full_name = '张三'"," SELECT c.customer_full_name, c.customer_contact_number FROM hive.testpzy.customers c WHERE c.customer_id = 1;"
"将所有CPU型号为Intel Core i7的产品的供货价格调整为1000元","2","['update', 'join']","['Products', 'ProductSupplierMapping']","UPDATE Products p JOIN ProductSupplierMapping ps ON p.product_id = ps.product_id SET p.supply_price = 1000 WHERE p.processor_model = 'Intel Core i7'"," SELECT p.product_sku_code, ps.supply_price FROM testpzy.Products p JOIN testpzy.ProductSupplierMapping ps ON p.product_id = ps.product_id WHERE p.product_name ilike '%Intel%Core%i7%' LIMIT 1;"
"修改所有订单中产品数量为3的订单项的价格为100元","2","['update', 'join']","['Orders', 'OrderItems']","UPDATE OrderItems oi JOIN Orders o ON oi.order_id = o.order_id SET oi.unit_price = 100 WHERE oi.quantity = 3"," SELECT oi.order_item_id, oi.product_id, oi.quantity, oi.unit_price, oi.discount_percentage FROM hive.testpzy.orderitems oi WHERE oi.quantity = 3;"
"如果某个产品的库存量低于50，则将其供货价格提高10元","3","['update', 'join', 'aggregate']","['Products', 'ProductSpecifications', 'Inventory']","UPDATE Products p JOIN ProductSpecifications ps ON p.product_id = ps.product_id JOIN Inventory i ON p.product_id = i.product_id SET p.supply_price = p.supply_price + 10 WHERE i.quantity_in_stock < 50"," SELECT i.inventory_id, i.product_id, i.warehouse_location, i.quantity_in_stock, p.product_price FROM testpzy.Inventory i JOIN testpzy.Products p ON i.product_id = p.product_id WHERE i.quantity_in_stock < 50;"
"将所有售后申请状态为‘已解决’且产品型号为'笔记本电脑'的订单修改为已完成","3","['update', 'join', 'subquery']","['AfterSalesServiceRequests', 'Orders', 'Products']","UPDATE AfterSalesServiceRequests AS ASR JOIN Orders AS O ON ASR.order_id = O.order_id JOIN Products AS P ON O.product_id = P.product_id SET O.order_status = '已完成' WHERE ASR.resolution_status = '已解决' AND P.product_name = '笔记本电脑'"," SELECT a.order_id, p.product_category, o.order_status FROM testpzy.AfterSalesServiceRequests a JOIN testpzy.Products p ON a.product_id = p.product_id JOIN testpzy.Orders o ON a.order_id = o.order_id WHERE a.resolution_status = '已解决' AND p.product_category = '笔记本电脑' ORDER BY a.order_id NULLS LAST;"
"将客户张三的联系电话更新为13800001234","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '13800001234' WHERE customer_full_name = '张三'"," SELECT c.customer_contact_number FROM hive.testpzy.customers c WHERE c.customer_full_name = '张三' UNION ALL UPDATE hive.testpzy.customers c SET c.customer_contact_number = '13800001234' WHERE c.customer_full_name = '张三';"
"将所有产品屏幕大小更新为15.6英寸","2","['update', 'join']","['Products', 'ProductSpecifications']","UPDATE Products p JOIN ProductSpecifications ps ON p.product_id = ps.product_id SET p.product_name = '新名称' WHERE p.product_category = '笔记本电脑'"," SELECT ps.product_id, ps.screen_size_in_inches FROM hive.testpzy.productspecifications ps;"
"将订单号为10001的所有产品的折扣率修改为5%","2","['update', 'join']","['Orders', 'OrderItems']","UPDATE OrderItems oi JOIN Orders o ON oi.order_id = o.order_id SET oi.discount_percentage = 5 WHERE o.order_id = 10001"," SELECT * FROM hive.testpzy.orderitems WHERE order_id = 10001;"
"根据每个产品的库存数量，更新产品价格。库存量低于5个的产品价格增加10%","3","['update', 'join', 'aggregate']","['Products', 'Inventory', 'Orders']","UPDATE Products p JOIN Inventory i ON p.product_id = i.product_id SET p.unit_price = p.unit_price * 1.1 WHERE i.quantity_in_stock < 5"," SELECT p.product_id, p.product_name, i.quantity_in_stock FROM testpzy.products AS p JOIN testpzy.inventory AS i ON CAST(p.product_id AS integer) = i.product_id WHERE i.quantity_in_stock < 5;"
"将所有售后服务申请状态为'已解决'的订单的配送跟踪号更新为 'tracking_number'","3","['update', 'join', 'subquery']","['AfterSalesServiceRequests', 'Orders']","UPDATE AfterSalesServiceRequests asr JOIN Orders o ON asr.order_id = o.order_id SET o.shipping_tracking_number = 'tracking_number' WHERE asr.resolution_status = '已解决'"," SELECT DISTINCT a.order_id FROM hive.testpzy.aftersalesservicerequests a WHERE a.resolution_status = '已解决' ORDER BY a.order_id NULLS LAST;"
"修改客户 John Doe 的联系电话为 123-456-7890","1","['update']","['Customers']","UPDATE Customers SET customer_contact_number = '123-456-7890' WHERE customer_full_name = 'John Doe'"," SELECT c.customer_id, c.customer_full_name, c.customer_email_address, c.customer_contact_number, c.customer_shipping_address, c.customer_registered_date FROM hive.testpzy.customers c WHERE c.customer_id = 1;"
"将供应商名称为 'ABC Electronics' 的产品的供货价格提高 10%","2","['update']","['Products', 'ProductSupplierMapping']","UPDATE Products JOIN ProductSupplierMapping ON Products.product_id = ProductSupplierMapping.product_id SET supply_price = supply_price * 1.1 WHERE Supplier.supplier_name = 'ABC Electronics'"," SELECT p.product_name, CAST(p.product_sku_code AS integer) AS product_id, s.supplier_name, ps.supply_price * 1.1 AS supply_price FROM hive.testpzy.products p JOIN hive.testpzy.productsuppliermapping ps ON p.product_id = ps.product_id JOIN hive.testpzy.suppliers s ON ps.supplier_id = s.supplier_id WHERE s.supplier_name = 'ABC Electronics'"
"将订单 ID 为 101 的商品中特定产品的折扣百分比从 5% 增加到 10%","2","['update']","['Orders', 'OrderItems']","UPDATE OrderItems SET discount_percentage = 0.1 WHERE order_id = 101 AND product_name = 'Laptop Model X'"," SELECT oi.order_item_id, oi.quantity, oi.unit_price, oi.discount_percentage * 100 AS discount_percentage_in_int FROM hive.testpzy.orderitems oi WHERE oi.order_id = 101 AND oi.product_id = 56789;"
"当库存中某个产品的数量降至reorder_threshold时，更新该产品在所有订单中的价格为新的市场价格","3","['update']","['Inventory', 'Products', 'Orders', 'OrderItems']","UPDATE Inventory JOIN Products ON Inventory.product_id = Products.product_id SET  Products.product_price = market_price WHERE Inventory.quantity_in_stock <= Inventory.reorder_threshold;"," SELECT i.inventory_id, i.product_id, i.warehouse_location, i.quantity_in_stock, i.last_restock_date, i.reorder_threshold FROM testpzy.inventories i WHERE i.quantity_in_stock <= i.reorder_threshold;"
"当售后服务请求的解决状态为 'resolved' 时，更新该产品的 warranty_period_in_months 为剩余期限","3","['update']","['AfterSalesServiceRequests', 'Orders', 'Products']","UPDATE AfterSalesServiceRequests JOIN Orders ON AfterSalesServiceRequests.order_id = Orders.order_id JOIN Products ON Orders.product_id = Products.product_id SET Products.warranty_period_in_months = Products.warranty_period_in_months - (DATEDIFF(CURDATE(), AfterSalesServiceRequests.resolution_date)) / 30 WHERE AfterSalesServiceRequests.resolution_status = 'resolved'"," SELECT a.request_id, p.warranty_period_in_months AS remaining_months FROM testpzy.AfterSalesServiceRequests a JOIN testpzy.Products p ON a.product_id = p.product_id WHERE a.resolution_status = 'resolved'"
